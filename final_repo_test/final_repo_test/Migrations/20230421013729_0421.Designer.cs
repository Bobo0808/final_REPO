// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using final_repo_test.Data;

#nullable disable

namespace final_repo_test.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230421013729_0421")]
    partial class _0421
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("final_repo_test.Models.Ads", b =>
                {
                    b.Property<int>("Ad_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ad_ID"), 1L, 1);

                    b.Property<int>("AD_FinalPaymentAmount")
                        .HasColumnType("int");

                    b.Property<int>("Ad_ActiveStatus")
                        .HasColumnType("int");

                    b.Property<int>("Ad_Clicks")
                        .HasColumnType("int");

                    b.Property<int>("Ad_DayCount")
                        .HasColumnType("int");

                    b.Property<string>("Ad_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ad_EndTime")
                        .HasColumnType("Date");

                    b.Property<string>("Ad_ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ad_PaymentDueDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("Ad_StartTime")
                        .HasColumnType("Date");

                    b.Property<string>("Ad_TargetURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ad_TimeOfPayment")
                        .HasColumnType("Date");

                    b.Property<int>("CaseID")
                        .HasColumnType("int");

                    b.Property<int>("OS_ID")
                        .HasColumnType("int");

                    b.Property<int>("PartnerID")
                        .HasColumnType("int");

                    b.HasKey("Ad_ID");

                    b.HasIndex("CaseID");

                    b.HasIndex("OS_ID");

                    b.HasIndex("PartnerID");

                    b.ToTable("Ads", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Ads_OrderStatus", b =>
                {
                    b.Property<int>("OS_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OS_ID"), 1L, 1);

                    b.Property<decimal>("OS_FullfillmentRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OS_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OS_PaymentMultiplier")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OS_ID");

                    b.ToTable("Ads_OrderStatuses");
                });

            modelBuilder.Entity("final_repo_test.Models.Card", b =>
                {
                    b.Property<int>("CA_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CA_ID"), 1L, 1);

                    b.Property<DateTime>("CA_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("CA_Describe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CA_Discontinuted")
                        .HasColumnType("bit");

                    b.Property<string>("CA_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CA_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CA_Price")
                        .HasColumnType("int");

                    b.HasKey("CA_ID");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            CA_ID = 1,
                            CA_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6854),
                            CA_Describe = "100元換200點",
                            CA_Discontinuted = false,
                            CA_Image = "點數.png",
                            CA_Name = "100元換200點",
                            CA_Price = 100
                        },
                        new
                        {
                            CA_ID = 2,
                            CA_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6856),
                            CA_Describe = "200元換350點",
                            CA_Discontinuted = false,
                            CA_Image = "點數.png",
                            CA_Name = "200元換350點",
                            CA_Price = 200
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.CardOrder", b =>
                {
                    b.Property<int>("CO_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CO_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<int>("CA_ID")
                        .HasColumnType("int");

                    b.Property<int>("CO_Quantity")
                        .HasColumnType("int");

                    b.Property<int>("CO_Sum")
                        .HasColumnType("int");

                    b.Property<int>("CT_ID")
                        .HasColumnType("int");

                    b.HasKey("CO_ID");

                    b.HasIndex("A_ID");

                    b.HasIndex("CA_ID");

                    b.HasIndex("CT_ID");

                    b.ToTable("CardOrders");

                    b.HasData(
                        new
                        {
                            CO_ID = 1,
                            A_ID = 1,
                            CA_ID = 1,
                            CO_Quantity = 1,
                            CO_Sum = 100,
                            CT_ID = 1
                        },
                        new
                        {
                            CO_ID = 2,
                            A_ID = 1,
                            CA_ID = 2,
                            CO_Quantity = 2,
                            CO_Sum = 400,
                            CT_ID = 2
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.CardType", b =>
                {
                    b.Property<int>("CT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CT_ID"), 1L, 1);

                    b.Property<string>("CT_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CT_ID");

                    b.ToTable("CardTypes");

                    b.HasData(
                        new
                        {
                            CT_ID = 1,
                            CT_Name = "綠界"
                        },
                        new
                        {
                            CT_ID = 2,
                            CT_Name = "LinePay"
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.CaseTable", b =>
                {
                    b.Property<int>("Case_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Case_ID"), 1L, 1);

                    b.Property<string>("Case_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Case_PricePerDay")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Case_ID");

                    b.ToTable("CaseTables", (string)null);

                    b.HasData(
                        new
                        {
                            Case_ID = 1,
                            Case_Name = "豪華蛋黃熱區",
                            Case_PricePerDay = 250m
                        },
                        new
                        {
                            Case_ID = 2,
                            Case_Name = "中等曝光區",
                            Case_PricePerDay = 200m
                        },
                        new
                        {
                            Case_ID = 3,
                            Case_Name = "經濟實惠區",
                            Case_PricePerDay = 150m
                        },
                        new
                        {
                            Case_ID = 4,
                            Case_Name = "限時特惠專區",
                            Case_PricePerDay = 100m
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.DebugLog", b =>
                {
                    b.Property<int>("D_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("D_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<string>("D_Comment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("D_event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("D_isSolved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("D_time")
                        .HasColumnType("datetime2");

                    b.HasKey("D_ID");

                    b.HasIndex("A_ID");

                    b.ToTable("DebugLogs", (string)null);

                    b.HasData(
                        new
                        {
                            D_ID = 1,
                            A_ID = 2,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6406)
                        },
                        new
                        {
                            D_ID = 2,
                            A_ID = 5,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6458)
                        },
                        new
                        {
                            D_ID = 3,
                            A_ID = 9,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6460)
                        },
                        new
                        {
                            D_ID = 4,
                            A_ID = 4,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6461)
                        },
                        new
                        {
                            D_ID = 5,
                            A_ID = 2,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6463)
                        },
                        new
                        {
                            D_ID = 6,
                            A_ID = 7,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6465)
                        },
                        new
                        {
                            D_ID = 7,
                            A_ID = 8,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6466)
                        },
                        new
                        {
                            D_ID = 8,
                            A_ID = 10,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6468)
                        },
                        new
                        {
                            D_ID = 9,
                            A_ID = 4,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6469)
                        },
                        new
                        {
                            D_ID = 10,
                            A_ID = 1,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6471)
                        },
                        new
                        {
                            D_ID = 11,
                            A_ID = 8,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6473)
                        },
                        new
                        {
                            D_ID = 12,
                            A_ID = 5,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6474)
                        },
                        new
                        {
                            D_ID = 13,
                            A_ID = 4,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6475)
                        },
                        new
                        {
                            D_ID = 14,
                            A_ID = 7,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6476)
                        },
                        new
                        {
                            D_ID = 15,
                            A_ID = 1,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6477)
                        },
                        new
                        {
                            D_ID = 16,
                            A_ID = 3,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6479)
                        },
                        new
                        {
                            D_ID = 17,
                            A_ID = 4,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6480)
                        },
                        new
                        {
                            D_ID = 18,
                            A_ID = 4,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6481)
                        },
                        new
                        {
                            D_ID = 19,
                            A_ID = 3,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 37, 29, 664, DateTimeKind.Local).AddTicks(6483)
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Employee", b =>
                {
                    b.Property<int>("E_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("E_ID"), 1L, 1);

                    b.Property<string>("E_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("E_Birthday")
                        .HasColumnType("Date");

                    b.Property<string>("E_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("E_Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("E_HireDate")
                        .HasColumnType("Date");

                    b.Property<string>("E_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("E_Permission")
                        .HasColumnType("int");

                    b.Property<string>("E_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Pwd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("E_Title")
                        .HasColumnType("int");

                    b.Property<string>("E_UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("E_Work")
                        .HasColumnType("bit");

                    b.HasKey("E_ID");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.LoginStaus", b =>
                {
                    b.Property<int>("L_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("L_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("L_cTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L_dcTime")
                        .HasColumnType("datetime2");

                    b.HasKey("L_ID");

                    b.HasIndex("A_ID");

                    b.ToTable("LoginStaus", (string)null);

                    b.HasData(
                        new
                        {
                            L_ID = 1,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 4, 3, 1, 2, 49, 323, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 3, 6, 2, 49, 323, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 2,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 2, 28, 9, 43, 45, 598, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 28, 13, 43, 45, 598, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 3,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 4, 2, 1, 24, 8, 941, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 2, 6, 24, 8, 941, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 4,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 2, 26, 4, 31, 6, 476, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 26, 12, 31, 6, 476, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 5,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 4, 6, 6, 30, 32, 798, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 6, 12, 30, 32, 798, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 6,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 2, 7, 2, 14, 50, 117, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 7, 10, 14, 50, 117, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 7,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 3, 18, 22, 8, 30, 379, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 19, 4, 8, 30, 379, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 8,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 3, 29, 20, 55, 0, 982, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 29, 22, 55, 0, 982, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 9,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 1, 9, 12, 15, 4, 612, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 9, 14, 15, 4, 612, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 10,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 2, 3, 1, 4, 38, 393, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 3, 2, 4, 38, 393, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 11,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 1, 25, 15, 53, 34, 36, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 25, 23, 53, 34, 36, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 12,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 4, 14, 5, 7, 35, 733, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 14, 12, 7, 35, 733, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 13,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 1, 12, 11, 19, 54, 349, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 12, 18, 19, 54, 349, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 14,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 2, 15, 6, 27, 6, 941, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 15, 13, 27, 6, 941, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 15,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 2, 9, 16, 28, 59, 304, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 9, 20, 28, 59, 304, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 16,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 4, 5, 11, 20, 5, 967, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 5, 18, 20, 5, 967, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 17,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 3, 22, 21, 18, 43, 947, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 23, 6, 18, 43, 947, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 18,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 2, 11, 8, 17, 21, 985, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 11, 14, 17, 21, 985, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 19,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 21, 9, 11, 18, 536, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 21, 11, 11, 18, 536, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 20,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 4, 4, 9, 19, 31, 443, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 4, 10, 19, 31, 443, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 21,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 2, 5, 14, 44, 50, 170, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 5, 22, 44, 50, 170, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 22,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 2, 20, 19, 30, 54, 588, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 20, 21, 30, 54, 588, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 23,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 2, 15, 9, 20, 40, 534, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 15, 17, 20, 40, 534, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 24,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 4, 30, 20, 53, 1, 285, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 5, 1, 6, 53, 1, 285, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 25,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 4, 2, 20, 12, 9, 587, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 2, 23, 12, 9, 587, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 26,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 3, 13, 4, 49, 42, 357, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 13, 14, 49, 42, 357, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 27,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 2, 3, 11, 3, 15, 113, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 3, 13, 3, 15, 113, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 28,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 1, 15, 16, 31, 25, 918, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 16, 1, 31, 25, 918, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 29,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 3, 8, 49, 47, 377, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 3, 17, 49, 47, 377, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 30,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 3, 1, 6, 30, 26, 74, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 1, 12, 30, 26, 74, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 31,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 4, 22, 18, 43, 45, 959, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 22, 23, 43, 45, 959, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 32,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 4, 5, 23, 16, 34, 864, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 6, 3, 16, 34, 864, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 33,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 1, 21, 6, 6, 0, 462, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 21, 16, 6, 0, 462, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 34,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 2, 18, 0, 35, 47, 841, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 18, 4, 35, 47, 841, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 35,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 2, 12, 7, 24, 57, 379, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 12, 10, 24, 57, 379, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 36,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 2, 7, 10, 24, 16, 123, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 7, 16, 24, 16, 123, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 37,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 3, 23, 16, 18, 56, 825, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 23, 20, 18, 56, 825, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 38,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 4, 7, 8, 7, 16, 189, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 7, 17, 7, 16, 189, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 39,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 3, 25, 17, 54, 34, 791, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 25, 22, 54, 34, 791, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 40,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 3, 2, 8, 53, 23, 247, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 2, 12, 53, 23, 247, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 41,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 2, 2, 11, 29, 36, 571, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 2, 19, 29, 36, 571, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 42,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 2, 8, 23, 14, 41, 420, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 9, 6, 14, 41, 420, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 43,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 1, 23, 4, 53, 29, 542, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 23, 5, 53, 29, 542, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 44,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 2, 26, 20, 6, 11, 895, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 26, 23, 6, 11, 895, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 45,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 2, 2, 4, 8, 19, 838, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 2, 10, 8, 19, 838, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 46,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 3, 15, 8, 55, 40, 737, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 15, 16, 55, 40, 737, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 47,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 2, 16, 13, 55, 21, 557, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 16, 15, 55, 21, 557, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 48,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 1, 6, 1, 4, 42, 434, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 6, 9, 4, 42, 434, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 49,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 3, 3, 9, 19, 5, 985, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 3, 14, 19, 5, 985, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 50,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 4, 16, 5, 5, 36, 470, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 16, 6, 5, 36, 470, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 51,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 17, 16, 37, 54, 176, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 17, 23, 37, 54, 176, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 52,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 1, 20, 18, 56, 18, 904, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 21, 4, 56, 18, 904, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 53,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 1, 5, 11, 34, 31, 935, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 5, 14, 34, 31, 935, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 54,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 3, 3, 13, 35, 50, 661, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 3, 17, 35, 50, 661, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 55,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 29, 3, 13, 17, 470, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 29, 6, 13, 17, 470, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 56,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 4, 1, 5, 20, 57, 696, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 1, 15, 20, 57, 696, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 57,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 1, 21, 23, 45, 38, 627, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 22, 4, 45, 38, 627, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 58,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 16, 19, 6, 11, 937, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 16, 22, 6, 11, 937, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 59,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 2, 1, 20, 0, 55, 233, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 1, 22, 0, 55, 233, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 60,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 2, 7, 2, 52, 46, 841, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 7, 8, 52, 46, 841, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 61,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 1, 6, 7, 32, 40, 831, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 6, 16, 32, 40, 831, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 62,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 1, 22, 20, 16, 40, 747, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 23, 0, 16, 40, 747, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 63,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 7, 18, 45, 36, 457, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 7, 20, 45, 36, 457, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 64,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 2, 26, 17, 57, 20, 647, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 26, 22, 57, 20, 647, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 65,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 3, 30, 8, 1, 5, 41, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 30, 10, 1, 5, 41, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 66,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 2, 4, 12, 21, 8, 449, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 4, 20, 21, 8, 449, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 67,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 15, 13, 52, 9, 528, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 15, 18, 52, 9, 528, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 68,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 1, 2, 8, 11, 1, 271, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 2, 9, 11, 1, 271, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 69,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 3, 1, 2, 42, 19, 476, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 1, 12, 42, 19, 476, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 70,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 3, 4, 18, 16, 5, 632, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 4, 22, 16, 5, 632, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 71,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 3, 24, 19, 48, 26, 641, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 24, 23, 48, 26, 641, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 72,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 7, 2, 16, 39, 37, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 7, 5, 16, 39, 37, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 73,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 1, 7, 3, 4, 53, 175, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 7, 12, 4, 53, 175, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 74,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 25, 23, 43, 52, 729, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 26, 1, 43, 52, 729, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 75,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 3, 26, 14, 28, 38, 952, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 26, 23, 28, 38, 952, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 76,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 4, 14, 10, 43, 12, 854, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 14, 12, 43, 12, 854, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 77,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 4, 13, 21, 37, 17, 557, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 14, 6, 37, 17, 557, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 78,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 1, 13, 7, 22, 55, 466, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 13, 13, 22, 55, 466, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 79,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 23, 13, 12, 40, 28, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 23, 20, 12, 40, 28, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 80,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 15, 14, 6, 46, 761, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 15, 20, 6, 46, 761, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 81,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 2, 27, 12, 1, 11, 789, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 27, 15, 1, 11, 789, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 82,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 2, 16, 12, 58, 1, 697, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 16, 21, 58, 1, 697, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 83,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 3, 18, 17, 51, 13, 691, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 18, 21, 51, 13, 691, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 84,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 4, 1, 15, 34, 43, 329, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 1, 18, 34, 43, 329, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 85,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 2, 13, 47, 50, 408, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 2, 23, 47, 50, 408, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 86,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 4, 28, 10, 53, 40, 926, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 28, 12, 53, 40, 926, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 87,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 19, 17, 49, 54, 793, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 19, 21, 49, 54, 793, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 88,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 4, 27, 19, 11, 16, 752, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 28, 1, 11, 16, 752, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 89,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 22, 17, 20, 17, 253, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 22, 19, 20, 17, 253, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 90,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 4, 4, 8, 42, 11, 571, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 4, 15, 42, 11, 571, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 91,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 4, 3, 3, 45, 22, 460, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 3, 11, 45, 22, 460, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 92,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 2, 21, 15, 42, 44, 135, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 21, 21, 42, 44, 135, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 93,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 2, 20, 7, 28, 12, 727, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 20, 12, 28, 12, 727, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 94,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 4, 4, 16, 14, 53, 589, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 4, 20, 14, 53, 589, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 95,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 3, 3, 8, 14, 11, 542, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 3, 12, 14, 11, 542, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 96,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 4, 7, 8, 12, 33, 657, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 7, 18, 12, 33, 657, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 97,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 2, 10, 20, 25, 25, 910, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 10, 23, 25, 25, 910, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 98,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 2, 1, 20, 3, 37, 408, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 2, 2, 3, 37, 408, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 99,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 1, 3, 11, 45, 19, 837, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 3, 17, 45, 19, 837, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 100,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 22, 13, 0, 6, 941, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 22, 20, 0, 6, 941, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 101,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 3, 7, 16, 25, 4, 975, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 8, 0, 25, 4, 975, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Map", b =>
                {
                    b.Property<int>("M_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("M_ID"), 1L, 1);

                    b.Property<string>("M_Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("M_MapType")
                        .HasColumnType("int");

                    b.Property<string>("M_Src")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("M_maxX")
                        .HasColumnType("int");

                    b.Property<int>("M_maxY")
                        .HasColumnType("int");

                    b.Property<int>("M_minX")
                        .HasColumnType("int");

                    b.Property<int>("M_minY")
                        .HasColumnType("int");

                    b.HasKey("M_ID");

                    b.ToTable("Maps", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Map_ADArea", b =>
                {
                    b.Property<int>("Area_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Area_ID"), 1L, 1);

                    b.Property<int>("Area_EndX")
                        .HasColumnType("int");

                    b.Property<int>("Area_EndY")
                        .HasColumnType("int");

                    b.Property<int>("Area_StartX")
                        .HasColumnType("int");

                    b.Property<int>("Area_StartY")
                        .HasColumnType("int");

                    b.Property<int>("CaseID")
                        .HasColumnType("int");

                    b.Property<int>("M_ID")
                        .HasColumnType("int");

                    b.HasKey("Area_ID");

                    b.HasIndex("CaseID");

                    b.HasIndex("M_ID");

                    b.ToTable("Map_ADAreas", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Map_BlockSpace", b =>
                {
                    b.Property<int>("Mb_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mb_ID"), 1L, 1);

                    b.Property<int>("M_ID")
                        .HasColumnType("int");

                    b.Property<int>("Mb_EndX")
                        .HasColumnType("int");

                    b.Property<int>("Mb_EndY")
                        .HasColumnType("int");

                    b.Property<int>("Mb_starX")
                        .HasColumnType("int");

                    b.Property<int>("Mb_starY")
                        .HasColumnType("int");

                    b.HasKey("Mb_ID");

                    b.HasIndex("M_ID");

                    b.ToTable("BlockSpaces", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Order", b =>
                {
                    b.Property<int>("O_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("O_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<bool>("O_Cancle")
                        .HasColumnType("bit");

                    b.Property<DateTime>("O_Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("O_TotalPrice")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("O_ID");

                    b.HasIndex("A_ID");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            O_ID = 1,
                            A_ID = 1,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6893),
                            O_TotalPrice = 2396m
                        },
                        new
                        {
                            O_ID = 2,
                            A_ID = 1,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6894),
                            O_TotalPrice = 1198m
                        },
                        new
                        {
                            O_ID = 3,
                            A_ID = 4,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6974),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 4,
                            A_ID = 9,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6986),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 5,
                            A_ID = 3,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(7006),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 6,
                            A_ID = 4,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(7016),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 7,
                            A_ID = 6,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(7024),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 8,
                            A_ID = 5,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(7032),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 9,
                            A_ID = 3,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(7071),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 10,
                            A_ID = 6,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(7080),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 11,
                            A_ID = 9,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(7088),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 12,
                            A_ID = 6,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(7096),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 13,
                            A_ID = 4,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(7110),
                            O_TotalPrice = 699m
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.OrderDetail", b =>
                {
                    b.Property<int>("Od_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Od_ID"), 1L, 1);

                    b.Property<int>("O_ID")
                        .HasColumnType("int");

                    b.Property<int>("Od_Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Od_Sum")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Od_UnitPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("P_ID")
                        .HasColumnType("int");

                    b.HasKey("Od_ID");

                    b.HasIndex("O_ID");

                    b.HasIndex("P_ID");

                    b.ToTable("OrderDetails", (string)null);

                    b.HasData(
                        new
                        {
                            Od_ID = 1,
                            O_ID = 1,
                            Od_Quantity = 2,
                            Od_Sum = 1398m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 2,
                            O_ID = 1,
                            Od_Quantity = 2,
                            Od_Sum = 998m,
                            Od_UnitPrice = 499m,
                            P_ID = 2
                        },
                        new
                        {
                            Od_ID = 3,
                            O_ID = 2,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 4,
                            O_ID = 2,
                            Od_Quantity = 1,
                            Od_Sum = 499m,
                            Od_UnitPrice = 499m,
                            P_ID = 2
                        },
                        new
                        {
                            Od_ID = 5,
                            O_ID = 3,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 6,
                            O_ID = 4,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 7,
                            O_ID = 5,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 8,
                            O_ID = 6,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 9,
                            O_ID = 7,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 10,
                            O_ID = 8,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 11,
                            O_ID = 9,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 12,
                            O_ID = 10,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 13,
                            O_ID = 11,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 14,
                            O_ID = 12,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 15,
                            O_ID = 13,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Partner", b =>
                {
                    b.Property<int>("P_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("P_ID"), 1L, 1);

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P_Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("P_ID");

                    b.ToTable("Partners", (string)null);

                    b.HasData(
                        new
                        {
                            P_ID = 1,
                            Contact = "林小明",
                            Email = "apple@gmail.com",
                            P_Name = "Apple",
                            P_Note = "好合作",
                            Phone = "0912345678"
                        },
                        new
                        {
                            P_ID = 2,
                            Contact = "陳大名",
                            Email = "google@gmail.com",
                            P_Name = "Google",
                            P_Note = "溝通良好",
                            Phone = "0923456789"
                        },
                        new
                        {
                            P_ID = 3,
                            Contact = "王小美",
                            Email = "amazon@gmail.com",
                            P_Name = "Amazon",
                            P_Note = "產品品質不錯",
                            Phone = "0934567890"
                        },
                        new
                        {
                            P_ID = 4,
                            Contact = "李志明",
                            Email = "microsoft@gmail.com",
                            P_Name = "Microsoft",
                            P_Note = "合作愉快",
                            Phone = "0912345678"
                        },
                        new
                        {
                            P_ID = 5,
                            Contact = "蔡佳玲",
                            Email = "facebook@gmail.com",
                            P_Name = "Facebook",
                            P_Note = "回覆速度快",
                            Phone = "0923456789"
                        },
                        new
                        {
                            P_ID = 6,
                            Contact = "林小華",
                            Email = "netflix@gmail.com",
                            P_Name = "Netflix",
                            P_Note = "服務很好",
                            Phone = "0934567890"
                        },
                        new
                        {
                            P_ID = 7,
                            Contact = "陳小明",
                            Email = "tesla@gmail.com",
                            P_Name = "Tesla",
                            P_Note = "值得信賴",
                            Phone = "0912345678"
                        },
                        new
                        {
                            P_ID = 8,
                            Contact = "蔡小玲",
                            Email = "twitter@gmail.com",
                            P_Name = "Twitter",
                            P_Note = "溝通良好",
                            Phone = "0923456789"
                        },
                        new
                        {
                            P_ID = 9,
                            Contact = "李小明",
                            Email = "uber@gmail.com",
                            P_Name = "Uber",
                            P_Note = "好合作",
                            Phone = "0934567890"
                        },
                        new
                        {
                            P_ID = 10,
                            Contact = "林小美",
                            Email = "airbnb@gmail.com",
                            P_Name = "Airbnb",
                            P_Note = "服務很好",
                            Phone = "0912345678"
                        },
                        new
                        {
                            P_ID = 11,
                            Contact = "陳大名",
                            Email = "linkedin@gmail.com",
                            P_Name = "LinkedIn",
                            P_Note = "回覆速度快",
                            Phone = "0923456789"
                        },
                        new
                        {
                            P_ID = 12,
                            Contact = "王小華",
                            Email = "dropbox@gmail.com",
                            P_Name = "Dropbox",
                            P_Note = "值得信賴",
                            Phone = "0934567890"
                        },
                        new
                        {
                            P_ID = 13,
                            Contact = "蔡小玲",
                            Email = "twitter@gmail.com",
                            P_Name = "Twitter",
                            P_Note = "溝通良好",
                            Phone = "0923456789"
                        },
                        new
                        {
                            P_ID = 14,
                            Contact = "陳小明",
                            Email = "salesforce@gmail.com",
                            P_Name = "Salesforce",
                            P_Note = "產品品質不錯",
                            Phone = "0912345678"
                        },
                        new
                        {
                            P_ID = 15,
                            Contact = "蔡佳玲",
                            Email = "adobe@gmail.com",
                            P_Name = "Adobe",
                            P_Note = "回覆速度快",
                            Phone = "0923456789"
                        },
                        new
                        {
                            P_ID = 16,
                            Contact = "林小華",
                            Email = "paypal@gmail.com",
                            P_Name = "PayPal",
                            P_Note = "合作愉快",
                            Phone = "0934567890"
                        },
                        new
                        {
                            P_ID = 17,
                            Contact = "陳小明",
                            Email = "oracle@gmail.com",
                            P_Name = "Oracle",
                            P_Note = "回覆速度快",
                            Phone = "0912345678"
                        },
                        new
                        {
                            P_ID = 18,
                            Contact = "蔡小玲",
                            Email = "ibm@gmail.com",
                            P_Name = "IBM",
                            P_Note = "好合作",
                            Phone = "0923456789"
                        },
                        new
                        {
                            P_ID = 19,
                            Contact = "李小明",
                            Email = "intel@gmail.com",
                            P_Name = "Intel",
                            P_Note = "值得信賴",
                            Phone = "0934567890"
                        },
                        new
                        {
                            P_ID = 20,
                            Contact = "林小美",
                            Email = "hp@gmail.com",
                            P_Name = "HP",
                            P_Note = "溝通良好",
                            Phone = "0912345678"
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Product", b =>
                {
                    b.Property<int>("P_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("P_ID"), 1L, 1);

                    b.Property<DateTime>("P_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("P_Describe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("P_Discontinuted")
                        .HasColumnType("bit");

                    b.Property<int>("P_Discount")
                        .HasColumnType("int");

                    b.Property<string>("P_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("P_Instock")
                        .HasColumnType("int");

                    b.Property<string>("P_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("P_Price")
                        .HasColumnType("int");

                    b.Property<int>("P_ProductType")
                        .HasColumnType("int");

                    b.HasKey("P_ID");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            P_ID = 1,
                            P_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6884),
                            P_Describe = "Regular Fit反摺袖襯衫",
                            P_Discontinuted = false,
                            P_Discount = 0,
                            P_Image = "1.jpg",
                            P_Instock = 99,
                            P_Name = "反摺袖襯衫",
                            P_Price = 699,
                            P_ProductType = 1
                        },
                        new
                        {
                            P_ID = 2,
                            P_Date = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6885),
                            P_Describe = "Regular Fit棉麻短袖襯衫",
                            P_Discontinuted = false,
                            P_Discount = 0,
                            P_Image = "2.jpg",
                            P_Instock = 99,
                            P_Name = "短袖襯衫",
                            P_Price = 499,
                            P_ProductType = 0
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Report", b =>
                {
                    b.Property<int>("R_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("R_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<string>("R_Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("R_Reply")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("R_ReportStatus")
                        .HasColumnType("int");

                    b.Property<int>("R_ReportType")
                        .HasColumnType("int");

                    b.Property<DateTime>("R_Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReportedA_ID")
                        .HasColumnType("int");

                    b.HasKey("R_ID");

                    b.HasIndex("A_ID");

                    b.HasIndex("ReportedA_ID");

                    b.ToTable("Reports", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Society", b =>
                {
                    b.Property<int>("S_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("S_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("S_Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TargetA_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("S_ID");

                    b.HasIndex("A_ID");

                    b.HasIndex("TargetA_ID");

                    b.ToTable("Societies", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.UserAccount", b =>
                {
                    b.Property<int>("A_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("A_ID"), 1L, 1);

                    b.Property<int>("A_Coin")
                        .HasColumnType("int");

                    b.Property<string>("A_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("A_Gender")
                        .HasColumnType("int");

                    b.Property<string>("A_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("A_NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("A_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("A_RegisteredAt")
                        .HasColumnType("Date");

                    b.Property<string>("A_add")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("A_level")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("Date");

                    b.Property<int>("P_id")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPWD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("A_ID");

                    b.HasIndex("P_id");

                    b.ToTable("Accounts", (string)null);

                    b.HasData(
                        new
                        {
                            A_ID = 1,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6771),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6768),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 2,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6784),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6783),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 3,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6789),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6789),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 4,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6794),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6794),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 5,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6800),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6799),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 6,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6806),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6805),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 7,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6810),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6810),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 8,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6815),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6815),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 9,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6820),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6819),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 10,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6825),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 37, 29, 665, DateTimeKind.Local).AddTicks(6824),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Ads", b =>
                {
                    b.HasOne("final_repo_test.Models.CaseTable", "CaseTable")
                        .WithMany("Ads")
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Ads_OrderStatus", "Ads_OrderStatus")
                        .WithMany("Ads")
                        .HasForeignKey("OS_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Partner", "Partner")
                        .WithMany("Ads")
                        .HasForeignKey("PartnerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ads_OrderStatus");

                    b.Navigation("CaseTable");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("final_repo_test.Models.CardOrder", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("CardOrders")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Card", "Card")
                        .WithMany("CardOrders")
                        .HasForeignKey("CA_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.CardType", "CardType")
                        .WithMany("CardOrders")
                        .HasForeignKey("CT_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Card");

                    b.Navigation("CardType");
                });

            modelBuilder.Entity("final_repo_test.Models.DebugLog", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("DebugLogs")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("final_repo_test.Models.LoginStaus", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("LoginStaus")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("final_repo_test.Models.Map_ADArea", b =>
                {
                    b.HasOne("final_repo_test.Models.CaseTable", "CaseTable")
                        .WithMany("Map_ADAreas")
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Map", "Map")
                        .WithMany("Map_ADAreas")
                        .HasForeignKey("M_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaseTable");

                    b.Navigation("Map");
                });

            modelBuilder.Entity("final_repo_test.Models.Map_BlockSpace", b =>
                {
                    b.HasOne("final_repo_test.Models.Map", "Map")
                        .WithMany("Map_BlockSpaces")
                        .HasForeignKey("M_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Map");
                });

            modelBuilder.Entity("final_repo_test.Models.Order", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("Orders")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("final_repo_test.Models.OrderDetail", b =>
                {
                    b.HasOne("final_repo_test.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("O_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("P_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("final_repo_test.Models.Report", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("Reports")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.UserAccount", "ReportedAccount")
                        .WithMany("ReportedReports")
                        .HasForeignKey("ReportedA_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("ReportedAccount");
                });

            modelBuilder.Entity("final_repo_test.Models.Society", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("Societies")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.UserAccount", "TargetAccount")
                        .WithMany("TargetSocieties")
                        .HasForeignKey("TargetA_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("TargetAccount");
                });

            modelBuilder.Entity("final_repo_test.Models.UserAccount", b =>
                {
                    b.HasOne("final_repo_test.Models.Product", "Product")
                        .WithMany("Accounts")
                        .HasForeignKey("P_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("final_repo_test.Models.Ads_OrderStatus", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("final_repo_test.Models.Card", b =>
                {
                    b.Navigation("CardOrders");
                });

            modelBuilder.Entity("final_repo_test.Models.CardType", b =>
                {
                    b.Navigation("CardOrders");
                });

            modelBuilder.Entity("final_repo_test.Models.CaseTable", b =>
                {
                    b.Navigation("Ads");

                    b.Navigation("Map_ADAreas");
                });

            modelBuilder.Entity("final_repo_test.Models.Map", b =>
                {
                    b.Navigation("Map_ADAreas");

                    b.Navigation("Map_BlockSpaces");
                });

            modelBuilder.Entity("final_repo_test.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("final_repo_test.Models.Partner", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("final_repo_test.Models.Product", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("final_repo_test.Models.UserAccount", b =>
                {
                    b.Navigation("CardOrders");

                    b.Navigation("DebugLogs");

                    b.Navigation("LoginStaus");

                    b.Navigation("Orders");

                    b.Navigation("ReportedReports");

                    b.Navigation("Reports");

                    b.Navigation("Societies");

                    b.Navigation("TargetSocieties");
                });
#pragma warning restore 612, 618
        }
    }
}
