// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using final_repo_test.Data;

#nullable disable

namespace final_repo_test.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230420172139_20230420bnn")]
    partial class _20230420bnn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("final_repo_test.Models.Ads", b =>
                {
                    b.Property<int>("Ad_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ad_ID"), 1L, 1);

                    b.Property<int>("AD_FinalPaymentAmount")
                        .HasColumnType("int");

                    b.Property<int>("Ad_ActiveStatus")
                        .HasColumnType("int");

                    b.Property<int>("Ad_Clicks")
                        .HasColumnType("int");

                    b.Property<int>("Ad_DayCount")
                        .HasColumnType("int");

                    b.Property<string>("Ad_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ad_EndTime")
                        .HasColumnType("Date");

                    b.Property<string>("Ad_ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ad_PaymentDueDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("Ad_StartTime")
                        .HasColumnType("Date");

                    b.Property<string>("Ad_TargetURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ad_TimeOfPayment")
                        .HasColumnType("Date");

                    b.Property<int>("CaseID")
                        .HasColumnType("int");

                    b.Property<int>("OS_ID")
                        .HasColumnType("int");

                    b.Property<int>("PartnerID")
                        .HasColumnType("int");

                    b.HasKey("Ad_ID");

                    b.HasIndex("CaseID");

                    b.HasIndex("OS_ID");

                    b.HasIndex("PartnerID");

                    b.ToTable("Ads", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Ads_OrderStatus", b =>
                {
                    b.Property<int>("OS_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OS_ID"), 1L, 1);

                    b.Property<decimal>("OS_FullfillmentRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OS_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OS_PaymentMultiplier")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OS_ID");

                    b.ToTable("Ads_OrderStatus");
                });

            modelBuilder.Entity("final_repo_test.Models.Card", b =>
                {
                    b.Property<int>("CA_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CA_ID"), 1L, 1);

                    b.Property<DateTime>("CA_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("CA_Describe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CA_Discontinuted")
                        .HasColumnType("bit");

                    b.Property<string>("CA_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CA_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CA_Price")
                        .HasColumnType("int");

                    b.HasKey("CA_ID");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            CA_ID = 1,
                            CA_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3037),
                            CA_Describe = "100元換200點",
                            CA_Discontinuted = false,
                            CA_Image = "點數.png",
                            CA_Name = "100元換200點",
                            CA_Price = 100
                        },
                        new
                        {
                            CA_ID = 2,
                            CA_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3039),
                            CA_Describe = "200元換350點",
                            CA_Discontinuted = false,
                            CA_Image = "點數.png",
                            CA_Name = "200元換350點",
                            CA_Price = 200
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.CardOrder", b =>
                {
                    b.Property<int>("CO_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CO_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<int>("CA_ID")
                        .HasColumnType("int");

                    b.Property<int>("CO_Quantity")
                        .HasColumnType("int");

                    b.Property<int>("CO_Sum")
                        .HasColumnType("int");

                    b.Property<int>("CT_ID")
                        .HasColumnType("int");

                    b.HasKey("CO_ID");

                    b.HasIndex("A_ID");

                    b.HasIndex("CA_ID");

                    b.HasIndex("CT_ID");

                    b.ToTable("CardOrders");

                    b.HasData(
                        new
                        {
                            CO_ID = 1,
                            A_ID = 1,
                            CA_ID = 1,
                            CO_Quantity = 1,
                            CO_Sum = 100,
                            CT_ID = 1
                        },
                        new
                        {
                            CO_ID = 2,
                            A_ID = 1,
                            CA_ID = 2,
                            CO_Quantity = 2,
                            CO_Sum = 400,
                            CT_ID = 2
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.CardType", b =>
                {
                    b.Property<int>("CT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CT_ID"), 1L, 1);

                    b.Property<string>("CT_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CT_ID");

                    b.ToTable("CardTypes");

                    b.HasData(
                        new
                        {
                            CT_ID = 1,
                            CT_Name = "綠界"
                        },
                        new
                        {
                            CT_ID = 2,
                            CT_Name = "LinePay"
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.CaseTable", b =>
                {
                    b.Property<int>("Case_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Case_ID"), 1L, 1);

                    b.Property<string>("Case_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Case_PricePerDay")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Case_ID");

                    b.ToTable("CaseTables", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.DebugLog", b =>
                {
                    b.Property<int>("D_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("D_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<string>("D_Comment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("D_event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("D_isSolved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("D_time")
                        .HasColumnType("datetime2");

                    b.HasKey("D_ID");

                    b.HasIndex("A_ID");

                    b.ToTable("DebugLogs", (string)null);

                    b.HasData(
                        new
                        {
                            D_ID = 1,
                            A_ID = 9,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9369)
                        },
                        new
                        {
                            D_ID = 2,
                            A_ID = 6,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9414)
                        },
                        new
                        {
                            D_ID = 3,
                            A_ID = 5,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9416)
                        },
                        new
                        {
                            D_ID = 4,
                            A_ID = 8,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9418)
                        },
                        new
                        {
                            D_ID = 5,
                            A_ID = 10,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9420)
                        },
                        new
                        {
                            D_ID = 6,
                            A_ID = 3,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9424)
                        },
                        new
                        {
                            D_ID = 7,
                            A_ID = 3,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9426)
                        },
                        new
                        {
                            D_ID = 8,
                            A_ID = 9,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9427)
                        },
                        new
                        {
                            D_ID = 9,
                            A_ID = 6,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9429)
                        },
                        new
                        {
                            D_ID = 10,
                            A_ID = 5,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9433)
                        },
                        new
                        {
                            D_ID = 11,
                            A_ID = 1,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9435)
                        },
                        new
                        {
                            D_ID = 12,
                            A_ID = 3,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9437)
                        },
                        new
                        {
                            D_ID = 13,
                            A_ID = 3,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9439)
                        },
                        new
                        {
                            D_ID = 14,
                            A_ID = 7,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9440)
                        },
                        new
                        {
                            D_ID = 15,
                            A_ID = 8,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9442)
                        },
                        new
                        {
                            D_ID = 16,
                            A_ID = 5,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9444)
                        },
                        new
                        {
                            D_ID = 17,
                            A_ID = 8,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9446)
                        },
                        new
                        {
                            D_ID = 18,
                            A_ID = 3,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9449)
                        },
                        new
                        {
                            D_ID = 19,
                            A_ID = 6,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 1, 21, 39, 237, DateTimeKind.Local).AddTicks(9451)
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Employee", b =>
                {
                    b.Property<int>("E_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("E_ID"), 1L, 1);

                    b.Property<string>("E_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("E_Birthday")
                        .HasColumnType("Date");

                    b.Property<string>("E_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("E_Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("E_HireDate")
                        .HasColumnType("Date");

                    b.Property<string>("E_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("E_Permission")
                        .HasColumnType("int");

                    b.Property<string>("E_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Pwd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("E_Title")
                        .HasColumnType("int");

                    b.Property<string>("E_UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("E_Work")
                        .HasColumnType("bit");

                    b.HasKey("E_ID");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.LoginStaus", b =>
                {
                    b.Property<int>("L_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("L_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("L_cTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L_dcTime")
                        .HasColumnType("datetime2");

                    b.HasKey("L_ID");

                    b.HasIndex("A_ID");

                    b.ToTable("LoginStaus", (string)null);

                    b.HasData(
                        new
                        {
                            L_ID = 1,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 30, 5, 47, 17, 647, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 30, 10, 47, 17, 647, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 2,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 1, 24, 10, 9, 12, 41, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 24, 13, 9, 12, 41, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 3,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 17, 18, 11, 32, 149, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 17, 23, 11, 32, 149, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 4,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 8, 7, 33, 37, 582, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 8, 9, 33, 37, 582, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 5,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 4, 17, 16, 45, 57, 40, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 18, 1, 45, 57, 40, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 6,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 2, 23, 2, 32, 14, 837, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 23, 9, 32, 14, 837, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 7,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 1, 26, 10, 5, 12, 886, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 26, 11, 5, 12, 886, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 8,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 15, 2, 52, 47, 15, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 15, 6, 52, 47, 15, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 9,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 4, 3, 14, 44, 44, 714, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 3, 16, 44, 44, 714, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 10,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 1, 15, 0, 28, 8, 1, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 15, 3, 28, 8, 1, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 11,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 3, 24, 7, 47, 26, 910, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 24, 12, 47, 26, 910, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 12,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 1, 19, 0, 4, 29, 917, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 19, 6, 4, 29, 917, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 13,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 2, 10, 1, 42, 6, 100, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 10, 2, 42, 6, 100, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 14,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 1, 18, 7, 7, 13, 495, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 18, 12, 7, 13, 495, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 15,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 2, 2, 15, 40, 55, 313, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 3, 1, 40, 55, 313, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 16,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 3, 5, 23, 4, 21, 555, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 6, 2, 4, 21, 555, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 17,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 2, 25, 16, 13, 30, 373, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 25, 23, 13, 30, 373, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 18,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 29, 8, 31, 26, 997, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 29, 16, 31, 26, 997, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 19,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 21, 9, 46, 21, 149, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 21, 16, 46, 21, 149, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 20,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 3, 5, 4, 46, 38, 930, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 5, 8, 46, 38, 930, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 21,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 4, 6, 13, 16, 21, 309, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 6, 16, 16, 21, 309, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 22,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 3, 17, 57, 42, 635, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 4, 0, 57, 42, 635, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 23,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 3, 17, 12, 31, 38, 819, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 17, 19, 31, 38, 819, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 24,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 3, 9, 6, 26, 59, 93, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 9, 11, 26, 59, 93, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 25,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 4, 18, 7, 5, 19, 56, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 18, 12, 5, 19, 56, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 26,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 1, 21, 10, 34, 44, 35, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 21, 20, 34, 44, 35, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 27,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 1, 12, 12, 43, 49, 655, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 12, 20, 43, 49, 655, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 28,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 4, 22, 1, 37, 35, 218, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 22, 2, 37, 35, 218, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 29,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 2, 13, 4, 26, 24, 222, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 13, 7, 26, 24, 222, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 30,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 1, 4, 12, 14, 7, 16, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 4, 15, 14, 7, 16, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 31,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 8, 18, 40, 15, 557, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 8, 22, 40, 15, 557, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 32,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 3, 18, 1, 12, 28, 690, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 18, 2, 12, 28, 690, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 33,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 3, 21, 22, 18, 31, 557, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 22, 6, 18, 31, 557, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 34,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 2, 15, 14, 3, 21, 355, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 15, 15, 3, 21, 355, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 35,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 1, 20, 4, 38, 24, 32, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 20, 11, 38, 24, 32, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 36,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 4, 26, 15, 51, 13, 96, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 26, 22, 51, 13, 96, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 37,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 1, 23, 17, 12, 3, 486, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 23, 23, 12, 3, 486, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 38,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 1, 15, 5, 42, 7, 399, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 15, 13, 42, 7, 399, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 39,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 2, 28, 6, 55, 47, 853, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 28, 13, 55, 47, 853, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 40,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 1, 20, 6, 30, 33, 698, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 20, 16, 30, 33, 698, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 41,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 1, 1, 13, 42, 45, 858, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 1, 18, 42, 45, 858, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 42,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 2, 8, 17, 13, 57, 432, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 8, 19, 13, 57, 432, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 43,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 2, 8, 22, 52, 21, 403, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 9, 7, 52, 21, 403, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 44,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 3, 19, 21, 31, 55, 215, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 20, 6, 31, 55, 215, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 45,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 19, 5, 24, 45, 375, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 19, 9, 24, 45, 375, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 46,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 26, 16, 51, 48, 392, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 26, 21, 51, 48, 392, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 47,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 2, 5, 16, 9, 8, 908, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 5, 22, 9, 8, 908, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 48,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 2, 27, 8, 31, 11, 112, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 27, 17, 31, 11, 112, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 49,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 2, 26, 12, 33, 13, 958, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 26, 16, 33, 13, 958, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 50,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 1, 23, 19, 30, 29, 441, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 24, 1, 30, 29, 441, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 51,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 1, 21, 11, 19, 28, 158, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 21, 15, 19, 28, 158, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 52,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 1, 21, 15, 33, 11, 956, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 21, 21, 33, 11, 956, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 53,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 1, 28, 22, 42, 8, 773, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 29, 5, 42, 8, 773, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 54,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 1, 25, 10, 54, 57, 592, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 25, 16, 54, 57, 592, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 55,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 1, 5, 10, 20, 58, 865, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 5, 20, 20, 58, 865, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 56,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 2, 20, 12, 50, 40, 923, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 20, 17, 50, 40, 923, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 57,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 3, 12, 12, 42, 26, 782, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 12, 18, 42, 26, 782, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 58,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 4, 4, 17, 2, 6, 620, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 5, 1, 2, 6, 620, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 59,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 25, 21, 5, 11, 156, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 26, 2, 5, 11, 156, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 60,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 2, 5, 2, 31, 2, 532, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 5, 10, 31, 2, 532, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 61,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 3, 12, 16, 39, 3, 413, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 12, 22, 39, 3, 413, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 62,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 4, 11, 13, 54, 3, 905, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 11, 21, 54, 3, 905, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 63,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 4, 19, 4, 22, 37, 953, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 19, 14, 22, 37, 953, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 64,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 2, 13, 2, 11, 9, 372, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 13, 4, 11, 9, 372, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 65,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 3, 16, 17, 29, 47, 668, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 16, 18, 29, 47, 668, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 66,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 2, 12, 2, 12, 2, 306, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 12, 3, 12, 2, 306, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 67,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 4, 9, 17, 44, 52, 108, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 10, 2, 44, 52, 108, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 68,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 4, 24, 5, 11, 28, 940, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 24, 13, 11, 28, 940, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 69,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 4, 10, 19, 31, 4, 533, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 10, 23, 31, 4, 533, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 70,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 2, 8, 9, 47, 16, 68, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 8, 14, 47, 16, 68, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 71,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 3, 1, 14, 38, 28, 966, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 1, 20, 38, 28, 966, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 72,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 4, 8, 22, 9, 41, 313, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 8, 23, 9, 41, 313, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 73,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 2, 14, 4, 12, 54, 536, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 14, 12, 12, 54, 536, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 74,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 3, 31, 12, 8, 56, 27, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 31, 21, 8, 56, 27, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 75,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 3, 8, 19, 51, 55, 527, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 9, 5, 51, 55, 527, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 76,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 3, 5, 13, 5, 43, 220, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 5, 23, 5, 43, 220, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 77,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 3, 14, 2, 4, 3, 769, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 14, 12, 4, 3, 769, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 78,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 23, 7, 55, 4, 842, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 23, 12, 55, 4, 842, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 79,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 4, 14, 13, 40, 58, 980, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 14, 14, 40, 58, 980, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 80,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 18, 5, 18, 51, 987, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 18, 10, 18, 51, 987, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 81,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 3, 18, 4, 3, 27, 982, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 18, 9, 3, 27, 982, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 82,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 4, 20, 1, 42, 31, 300, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 20, 5, 42, 31, 300, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 83,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 2, 28, 11, 6, 37, 39, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 28, 15, 6, 37, 39, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 84,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 2, 14, 21, 18, 52, 618, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 15, 7, 18, 52, 618, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 85,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 3, 28, 23, 33, 43, 521, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 29, 6, 33, 43, 521, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 86,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 2, 9, 1, 56, 54, 517, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 9, 8, 56, 54, 517, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 87,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 16, 22, 8, 51, 91, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 17, 5, 8, 51, 91, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 88,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 2, 14, 18, 27, 16, 579, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 15, 2, 27, 16, 579, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 89,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 3, 28, 5, 57, 17, 975, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 28, 13, 57, 17, 975, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 90,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 2, 11, 13, 23, 50, 261, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 11, 19, 23, 50, 261, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 91,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 4, 16, 1, 52, 57, 100, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 16, 7, 52, 57, 100, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 92,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 3, 2, 0, 27, 30, 139, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 2, 10, 27, 30, 139, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 93,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 31, 5, 57, 27, 146, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 31, 8, 57, 27, 146, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 94,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 2, 25, 15, 30, 19, 768, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 25, 21, 30, 19, 768, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 95,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 2, 19, 21, 8, 24, 731, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 19, 22, 8, 24, 731, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 96,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 1, 27, 21, 26, 18, 917, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 28, 6, 26, 18, 917, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 97,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 1, 31, 1, 54, 51, 686, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 31, 3, 54, 51, 686, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 98,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 3, 3, 17, 15, 17, 993, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 4, 0, 15, 17, 993, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 99,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 4, 4, 13, 30, 9, 369, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 4, 23, 30, 9, 369, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 100,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 2, 28, 13, 42, 59, 429, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 28, 23, 42, 59, 429, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 101,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 15, 19, 13, 16, 272, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 15, 22, 13, 16, 272, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Map", b =>
                {
                    b.Property<int>("M_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("M_ID"), 1L, 1);

                    b.Property<string>("M_Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("M_MapType")
                        .HasColumnType("int");

                    b.Property<string>("M_Src")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("M_maxX")
                        .HasColumnType("int");

                    b.Property<int>("M_maxY")
                        .HasColumnType("int");

                    b.Property<int>("M_minX")
                        .HasColumnType("int");

                    b.Property<int>("M_minY")
                        .HasColumnType("int");

                    b.HasKey("M_ID");

                    b.ToTable("Maps", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Map_ADArea", b =>
                {
                    b.Property<int>("Area_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Area_ID"), 1L, 1);

                    b.Property<int>("Area_EndX")
                        .HasColumnType("int");

                    b.Property<int>("Area_EndY")
                        .HasColumnType("int");

                    b.Property<int>("Area_StartX")
                        .HasColumnType("int");

                    b.Property<int>("Area_StartY")
                        .HasColumnType("int");

                    b.Property<int>("CaseID")
                        .HasColumnType("int");

                    b.Property<int>("M_ID")
                        .HasColumnType("int");

                    b.HasKey("Area_ID");

                    b.HasIndex("CaseID");

                    b.HasIndex("M_ID");

                    b.ToTable("Map_ADAreas", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Map_BlockSpace", b =>
                {
                    b.Property<int>("Mb_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mb_ID"), 1L, 1);

                    b.Property<int>("M_ID")
                        .HasColumnType("int");

                    b.Property<int>("Mb_EndX")
                        .HasColumnType("int");

                    b.Property<int>("Mb_EndY")
                        .HasColumnType("int");

                    b.Property<int>("Mb_starX")
                        .HasColumnType("int");

                    b.Property<int>("Mb_starY")
                        .HasColumnType("int");

                    b.HasKey("Mb_ID");

                    b.HasIndex("M_ID");

                    b.ToTable("BlockSpaces", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Order", b =>
                {
                    b.Property<int>("O_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("O_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<bool>("O_Cancle")
                        .HasColumnType("bit");

                    b.Property<DateTime>("O_Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("O_TotalPrice")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("O_ID");

                    b.HasIndex("A_ID");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            O_ID = 1,
                            A_ID = 1,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3070),
                            O_TotalPrice = 2396m
                        },
                        new
                        {
                            O_ID = 2,
                            A_ID = 1,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3072),
                            O_TotalPrice = 1198m
                        },
                        new
                        {
                            O_ID = 3,
                            A_ID = 2,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3112),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 4,
                            A_ID = 4,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3135),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 5,
                            A_ID = 9,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3156),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 6,
                            A_ID = 9,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3189),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 7,
                            A_ID = 3,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3209),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 8,
                            A_ID = 1,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3302),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 9,
                            A_ID = 6,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3323),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 10,
                            A_ID = 3,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3347),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 11,
                            A_ID = 1,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3367),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 12,
                            A_ID = 6,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3387),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 13,
                            A_ID = 9,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3407),
                            O_TotalPrice = 699m
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.OrderDetail", b =>
                {
                    b.Property<int>("Od_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Od_ID"), 1L, 1);

                    b.Property<int>("O_ID")
                        .HasColumnType("int");

                    b.Property<int>("Od_Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Od_Sum")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Od_UnitPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("P_ID")
                        .HasColumnType("int");

                    b.HasKey("Od_ID");

                    b.HasIndex("O_ID");

                    b.HasIndex("P_ID");

                    b.ToTable("OrderDetails", (string)null);

                    b.HasData(
                        new
                        {
                            Od_ID = 1,
                            O_ID = 1,
                            Od_Quantity = 2,
                            Od_Sum = 1398m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 2,
                            O_ID = 1,
                            Od_Quantity = 2,
                            Od_Sum = 998m,
                            Od_UnitPrice = 499m,
                            P_ID = 2
                        },
                        new
                        {
                            Od_ID = 3,
                            O_ID = 2,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 4,
                            O_ID = 2,
                            Od_Quantity = 1,
                            Od_Sum = 499m,
                            Od_UnitPrice = 499m,
                            P_ID = 2
                        },
                        new
                        {
                            Od_ID = 5,
                            O_ID = 3,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 6,
                            O_ID = 4,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 7,
                            O_ID = 5,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 8,
                            O_ID = 6,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 9,
                            O_ID = 7,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 10,
                            O_ID = 8,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 11,
                            O_ID = 9,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 12,
                            O_ID = 10,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 13,
                            O_ID = 11,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 14,
                            O_ID = 12,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 15,
                            O_ID = 13,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Partner", b =>
                {
                    b.Property<int>("P_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("P_ID"), 1L, 1);

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P_Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("P_ID");

                    b.ToTable("Partners", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Product", b =>
                {
                    b.Property<int>("P_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("P_ID"), 1L, 1);

                    b.Property<DateTime>("P_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("P_Describe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("P_Discontinuted")
                        .HasColumnType("bit");

                    b.Property<int>("P_Discount")
                        .HasColumnType("int");

                    b.Property<string>("P_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("P_Instock")
                        .HasColumnType("int");

                    b.Property<string>("P_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("P_Price")
                        .HasColumnType("int");

                    b.Property<int>("P_ProductType")
                        .HasColumnType("int");

                    b.HasKey("P_ID");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            P_ID = 1,
                            P_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3054),
                            P_Describe = "Regular Fit反摺袖襯衫",
                            P_Discontinuted = false,
                            P_Discount = 0,
                            P_Image = "1.jpg",
                            P_Instock = 99,
                            P_Name = "反摺袖襯衫",
                            P_Price = 699,
                            P_ProductType = 1
                        },
                        new
                        {
                            P_ID = 2,
                            P_Date = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(3056),
                            P_Describe = "Regular Fit棉麻短袖襯衫",
                            P_Discontinuted = false,
                            P_Discount = 0,
                            P_Image = "2.jpg",
                            P_Instock = 99,
                            P_Name = "短袖襯衫",
                            P_Price = 499,
                            P_ProductType = 0
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Report", b =>
                {
                    b.Property<int>("R_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("R_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<string>("R_Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("R_Reply")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("R_ReportStatus")
                        .HasColumnType("int");

                    b.Property<int>("R_ReportType")
                        .HasColumnType("int");

                    b.Property<DateTime>("R_Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReportedA_ID")
                        .HasColumnType("int");

                    b.HasKey("R_ID");

                    b.HasIndex("A_ID");

                    b.HasIndex("ReportedA_ID");

                    b.ToTable("Reports", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Society", b =>
                {
                    b.Property<int>("S_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("S_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("S_Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TargetA_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("S_ID");

                    b.HasIndex("A_ID");

                    b.HasIndex("TargetA_ID");

                    b.ToTable("Societies", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.UserAccount", b =>
                {
                    b.Property<int>("A_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("A_ID"), 1L, 1);

                    b.Property<int>("A_Coin")
                        .HasColumnType("int");

                    b.Property<string>("A_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("A_Gender")
                        .HasColumnType("int");

                    b.Property<string>("A_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("A_NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("A_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("A_RegisteredAt")
                        .HasColumnType("Date");

                    b.Property<string>("A_add")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("A_level")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("Date");

                    b.Property<int>("P_id")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPWD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("A_ID");

                    b.HasIndex("P_id");

                    b.ToTable("Accounts", (string)null);

                    b.HasData(
                        new
                        {
                            A_ID = 1,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2823),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2818),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 2,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2843),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2842),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 3,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2854),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2854),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 4,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2866),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2865),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 5,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2877),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2876),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 6,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2946),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2945),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 7,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2958),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2957),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 8,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2969),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2968),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 9,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2980),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2979),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 10,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2993),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 1, 21, 39, 239, DateTimeKind.Local).AddTicks(2992),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Ads", b =>
                {
                    b.HasOne("final_repo_test.Models.CaseTable", "CaseTable")
                        .WithMany("Ads")
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Ads_OrderStatus", "Ads_OrderStatus")
                        .WithMany("Ads")
                        .HasForeignKey("OS_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Partner", "Partner")
                        .WithMany("Ads")
                        .HasForeignKey("PartnerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ads_OrderStatus");

                    b.Navigation("CaseTable");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("final_repo_test.Models.CardOrder", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("CardOrders")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Card", "Card")
                        .WithMany("CardOrders")
                        .HasForeignKey("CA_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.CardType", "CardType")
                        .WithMany("CardOrders")
                        .HasForeignKey("CT_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Card");

                    b.Navigation("CardType");
                });

            modelBuilder.Entity("final_repo_test.Models.DebugLog", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("DebugLogs")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("final_repo_test.Models.LoginStaus", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("LoginStaus")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("final_repo_test.Models.Map_ADArea", b =>
                {
                    b.HasOne("final_repo_test.Models.CaseTable", "CaseTable")
                        .WithMany("Map_ADAreas")
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Map", "Map")
                        .WithMany("Map_ADAreas")
                        .HasForeignKey("M_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaseTable");

                    b.Navigation("Map");
                });

            modelBuilder.Entity("final_repo_test.Models.Map_BlockSpace", b =>
                {
                    b.HasOne("final_repo_test.Models.Map", "Map")
                        .WithMany("Map_BlockSpaces")
                        .HasForeignKey("M_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Map");
                });

            modelBuilder.Entity("final_repo_test.Models.Order", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("Orders")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("final_repo_test.Models.OrderDetail", b =>
                {
                    b.HasOne("final_repo_test.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("O_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("P_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("final_repo_test.Models.Report", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("Reports")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.UserAccount", "ReportedAccount")
                        .WithMany("ReportedReports")
                        .HasForeignKey("ReportedA_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("ReportedAccount");
                });

            modelBuilder.Entity("final_repo_test.Models.Society", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("Societies")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.UserAccount", "TargetAccount")
                        .WithMany("TargetSocieties")
                        .HasForeignKey("TargetA_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("TargetAccount");
                });

            modelBuilder.Entity("final_repo_test.Models.UserAccount", b =>
                {
                    b.HasOne("final_repo_test.Models.Product", "Product")
                        .WithMany("Accounts")
                        .HasForeignKey("P_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("final_repo_test.Models.Ads_OrderStatus", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("final_repo_test.Models.Card", b =>
                {
                    b.Navigation("CardOrders");
                });

            modelBuilder.Entity("final_repo_test.Models.CardType", b =>
                {
                    b.Navigation("CardOrders");
                });

            modelBuilder.Entity("final_repo_test.Models.CaseTable", b =>
                {
                    b.Navigation("Ads");

                    b.Navigation("Map_ADAreas");
                });

            modelBuilder.Entity("final_repo_test.Models.Map", b =>
                {
                    b.Navigation("Map_ADAreas");

                    b.Navigation("Map_BlockSpaces");
                });

            modelBuilder.Entity("final_repo_test.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("final_repo_test.Models.Partner", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("final_repo_test.Models.Product", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("final_repo_test.Models.UserAccount", b =>
                {
                    b.Navigation("CardOrders");

                    b.Navigation("DebugLogs");

                    b.Navigation("LoginStaus");

                    b.Navigation("Orders");

                    b.Navigation("ReportedReports");

                    b.Navigation("Reports");

                    b.Navigation("Societies");

                    b.Navigation("TargetSocieties");
                });
#pragma warning restore 612, 618
        }
    }
}
