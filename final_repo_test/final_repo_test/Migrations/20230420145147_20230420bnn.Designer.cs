// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using final_repo_test.Data;

#nullable disable

namespace final_repo_test.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230420145147_20230420bnn")]
    partial class _20230420bnn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("final_repo_test.Models.Ads", b =>
                {
                    b.Property<int>("Ad_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ad_ID"), 1L, 1);

                    b.Property<int>("AD_FinalPaymentAmount")
                        .HasColumnType("int");

                    b.Property<int>("Ad_ActiveStatus")
                        .HasColumnType("int");

                    b.Property<int>("Ad_Clicks")
                        .HasColumnType("int");

                    b.Property<int>("Ad_DayCount")
                        .HasColumnType("int");

                    b.Property<string>("Ad_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ad_EndTime")
                        .HasColumnType("Date");

                    b.Property<string>("Ad_ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ad_PaymentDueDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("Ad_StartTime")
                        .HasColumnType("Date");

                    b.Property<string>("Ad_TargetURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ad_TimeOfPayment")
                        .HasColumnType("Date");

                    b.Property<int>("CaseID")
                        .HasColumnType("int");

                    b.Property<int>("OS_ID")
                        .HasColumnType("int");

                    b.Property<int>("PartnerID")
                        .HasColumnType("int");

                    b.HasKey("Ad_ID");

                    b.HasIndex("CaseID");

                    b.HasIndex("OS_ID");

                    b.HasIndex("PartnerID");

                    b.ToTable("Ads", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Ads_OrderStatus", b =>
                {
                    b.Property<int>("OS_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OS_ID"), 1L, 1);

                    b.Property<decimal>("OS_FullfillmentRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OS_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OS_PaymentMultiplier")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OS_ID");

                    b.ToTable("Ads_OrderStatus");
                });

            modelBuilder.Entity("final_repo_test.Models.Card", b =>
                {
                    b.Property<int>("CA_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CA_ID"), 1L, 1);

                    b.Property<DateTime>("CA_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("CA_Describe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CA_Discontinuted")
                        .HasColumnType("bit");

                    b.Property<string>("CA_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CA_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CA_Price")
                        .HasColumnType("int");

                    b.HasKey("CA_ID");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            CA_ID = 1,
                            CA_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5126),
                            CA_Describe = "100元換200點",
                            CA_Discontinuted = false,
                            CA_Image = "點數.png",
                            CA_Name = "100元換200點",
                            CA_Price = 100
                        },
                        new
                        {
                            CA_ID = 2,
                            CA_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5127),
                            CA_Describe = "200元換350點",
                            CA_Discontinuted = false,
                            CA_Image = "點數.png",
                            CA_Name = "200元換350點",
                            CA_Price = 200
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.CardOrder", b =>
                {
                    b.Property<int>("CO_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CO_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<int>("CA_ID")
                        .HasColumnType("int");

                    b.Property<int>("CO_Quantity")
                        .HasColumnType("int");

                    b.Property<int>("CO_Sum")
                        .HasColumnType("int");

                    b.Property<int>("CT_ID")
                        .HasColumnType("int");

                    b.HasKey("CO_ID");

                    b.HasIndex("A_ID");

                    b.HasIndex("CA_ID");

                    b.HasIndex("CT_ID");

                    b.ToTable("CardOrders");

                    b.HasData(
                        new
                        {
                            CO_ID = 1,
                            A_ID = 1,
                            CA_ID = 1,
                            CO_Quantity = 1,
                            CO_Sum = 100,
                            CT_ID = 1
                        },
                        new
                        {
                            CO_ID = 2,
                            A_ID = 1,
                            CA_ID = 2,
                            CO_Quantity = 2,
                            CO_Sum = 400,
                            CT_ID = 2
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.CardType", b =>
                {
                    b.Property<int>("CT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CT_ID"), 1L, 1);

                    b.Property<string>("CT_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CT_ID");

                    b.ToTable("CardTypes");

                    b.HasData(
                        new
                        {
                            CT_ID = 1,
                            CT_Name = "綠界"
                        },
                        new
                        {
                            CT_ID = 2,
                            CT_Name = "LinePay"
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.CaseTable", b =>
                {
                    b.Property<int>("Case_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Case_ID"), 1L, 1);

                    b.Property<string>("Case_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Case_PricePerDay")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Case_ID");

                    b.ToTable("CaseTables", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.DebugLog", b =>
                {
                    b.Property<int>("D_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("D_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<string>("D_event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("D_isSolved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("D_time")
                        .HasColumnType("datetime2");

                    b.HasKey("D_ID");

                    b.HasIndex("A_ID");

                    b.ToTable("DebugLogs", (string)null);

                    b.HasData(
                        new
                        {
                            D_ID = 1,
                            A_ID = 8,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(3993)
                        },
                        new
                        {
                            D_ID = 2,
                            A_ID = 10,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4054)
                        },
                        new
                        {
                            D_ID = 3,
                            A_ID = 10,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4057)
                        },
                        new
                        {
                            D_ID = 4,
                            A_ID = 6,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4059)
                        },
                        new
                        {
                            D_ID = 5,
                            A_ID = 1,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4061)
                        },
                        new
                        {
                            D_ID = 6,
                            A_ID = 2,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4064)
                        },
                        new
                        {
                            D_ID = 7,
                            A_ID = 10,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4066)
                        },
                        new
                        {
                            D_ID = 8,
                            A_ID = 3,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4068)
                        },
                        new
                        {
                            D_ID = 9,
                            A_ID = 6,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4070)
                        },
                        new
                        {
                            D_ID = 10,
                            A_ID = 10,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4073)
                        },
                        new
                        {
                            D_ID = 11,
                            A_ID = 6,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4075)
                        },
                        new
                        {
                            D_ID = 12,
                            A_ID = 9,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4077)
                        },
                        new
                        {
                            D_ID = 13,
                            A_ID = 7,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4079)
                        },
                        new
                        {
                            D_ID = 14,
                            A_ID = 9,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4081)
                        },
                        new
                        {
                            D_ID = 15,
                            A_ID = 9,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4082)
                        },
                        new
                        {
                            D_ID = 16,
                            A_ID = 7,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4085)
                        },
                        new
                        {
                            D_ID = 17,
                            A_ID = 7,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4143)
                        },
                        new
                        {
                            D_ID = 18,
                            A_ID = 1,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4147)
                        },
                        new
                        {
                            D_ID = 19,
                            A_ID = 5,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 20, 22, 51, 47, 412, DateTimeKind.Local).AddTicks(4149)
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Employee", b =>
                {
                    b.Property<int>("E_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("E_ID"), 1L, 1);

                    b.Property<string>("E_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("E_Birthday")
                        .HasColumnType("Date");

                    b.Property<string>("E_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("E_Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("E_HireDate")
                        .HasColumnType("Date");

                    b.Property<string>("E_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("E_Permission")
                        .HasColumnType("int");

                    b.Property<string>("E_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Pwd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("E_Title")
                        .HasColumnType("int");

                    b.Property<string>("E_UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("E_Work")
                        .HasColumnType("bit");

                    b.HasKey("E_ID");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.LoginStaus", b =>
                {
                    b.Property<int>("L_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("L_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("L_cTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L_dcTime")
                        .HasColumnType("datetime2");

                    b.HasKey("L_ID");

                    b.HasIndex("A_ID");

                    b.ToTable("LoginStaus", (string)null);

                    b.HasData(
                        new
                        {
                            L_ID = 1,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 4, 3, 6, 54, 26, 652, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 3, 10, 54, 26, 652, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 2,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 1, 31, 0, 43, 34, 120, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 31, 8, 43, 34, 120, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 3,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 1, 17, 18, 12, 33, 845, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 17, 20, 12, 33, 845, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 4,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 1, 19, 8, 12, 42, 953, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 19, 9, 12, 42, 953, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 5,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 3, 5, 23, 6, 5, 978, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 6, 4, 6, 5, 978, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 6,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 4, 7, 8, 14, 16, 328, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 7, 9, 14, 16, 328, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 7,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 4, 21, 13, 26, 10, 286, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 21, 16, 26, 10, 286, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 8,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 3, 2, 6, 4, 47, 539, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 2, 9, 4, 47, 539, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 9,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 3, 2, 10, 46, 21, 93, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 2, 20, 46, 21, 93, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 10,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 31, 7, 0, 26, 625, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 31, 8, 0, 26, 625, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 11,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 1, 4, 23, 41, 2, 804, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 5, 3, 41, 2, 804, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 12,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 3, 23, 10, 49, 48, 21, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 23, 11, 49, 48, 21, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 13,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 3, 7, 27, 22, 217, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 3, 16, 27, 22, 217, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 14,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 2, 16, 14, 38, 41, 726, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 16, 17, 38, 41, 726, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 15,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 3, 31, 0, 38, 29, 65, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 31, 6, 38, 29, 65, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 16,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 2, 12, 4, 17, 17, 365, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 12, 7, 17, 17, 365, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 17,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 1, 22, 18, 45, 19, 190, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 23, 4, 45, 19, 190, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 18,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 4, 26, 0, 42, 39, 502, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 26, 1, 42, 39, 502, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 19,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 1, 15, 14, 14, 46, 800, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 15, 23, 14, 46, 800, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 20,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 1, 3, 5, 13, 3, 440, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 3, 7, 13, 3, 440, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 21,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 2, 25, 15, 48, 7, 591, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 26, 0, 48, 7, 591, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 22,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 1, 25, 17, 41, 25, 231, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 25, 23, 41, 25, 231, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 23,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 2, 24, 21, 56, 47, 447, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 25, 2, 56, 47, 447, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 24,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 3, 19, 19, 34, 58, 554, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 20, 0, 34, 58, 554, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 25,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 2, 7, 8, 59, 56, 943, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 7, 16, 59, 56, 943, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 26,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 3, 13, 15, 0, 56, 530, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 13, 19, 0, 56, 530, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 27,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 3, 14, 2, 13, 4, 690, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 14, 10, 13, 4, 690, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 28,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 4, 20, 19, 11, 48, 928, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 21, 4, 11, 48, 928, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 29,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 2, 12, 21, 57, 51, 38, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 12, 22, 57, 51, 38, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 30,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 1, 17, 15, 16, 55, 633, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 17, 17, 16, 55, 633, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 31,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 1, 7, 3, 39, 13, 159, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 7, 5, 39, 13, 159, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 32,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 2, 15, 14, 43, 57, 69, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 15, 17, 43, 57, 69, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 33,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 2, 21, 14, 2, 52, 41, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 21, 21, 2, 52, 41, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 34,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 3, 20, 17, 10, 53, 621, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 21, 3, 10, 53, 621, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 35,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 1, 25, 4, 44, 15, 659, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 25, 5, 44, 15, 659, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 36,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 2, 13, 13, 35, 2, 690, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 13, 23, 35, 2, 690, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 37,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 2, 2, 7, 7, 0, 624, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 2, 9, 7, 0, 624, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 38,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 2, 4, 14, 58, 51, 26, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 4, 16, 58, 51, 26, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 39,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 4, 19, 11, 55, 6, 833, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 19, 13, 55, 6, 833, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 40,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 3, 31, 14, 2, 28, 976, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 31, 19, 2, 28, 976, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 41,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 2, 1, 18, 32, 50, 141, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 2, 0, 32, 50, 141, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 42,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 4, 15, 13, 31, 11, 937, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 15, 23, 31, 11, 937, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 43,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 4, 17, 22, 29, 35, 819, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 18, 1, 29, 35, 819, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 44,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 4, 10, 15, 38, 46, 435, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 10, 16, 38, 46, 435, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 45,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 3, 7, 18, 20, 49, 546, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 8, 1, 20, 49, 546, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 46,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 3, 6, 19, 39, 48, 535, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 6, 22, 39, 48, 535, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 47,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 4, 27, 10, 56, 5, 632, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 27, 12, 56, 5, 632, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 48,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 2, 7, 16, 8, 23, 167, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 7, 22, 8, 23, 167, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 49,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 3, 19, 16, 23, 34, 936, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 20, 1, 23, 34, 936, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 50,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 2, 9, 12, 7, 58, 546, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 9, 14, 7, 58, 546, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 51,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 3, 24, 2, 9, 19, 706, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 24, 9, 9, 19, 706, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 52,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 4, 14, 18, 38, 48, 250, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 14, 20, 38, 48, 250, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 53,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 1, 18, 7, 29, 49, 233, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 18, 15, 29, 49, 233, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 54,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 3, 5, 6, 9, 35, 201, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 5, 8, 9, 35, 201, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 55,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 3, 11, 6, 59, 4, 916, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 11, 8, 59, 4, 916, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 56,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 1, 22, 12, 16, 18, 792, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 22, 16, 16, 18, 792, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 57,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 4, 6, 21, 52, 33, 612, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 7, 4, 52, 33, 612, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 58,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 26, 20, 35, 37, 626, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 26, 22, 35, 37, 626, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 59,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 2, 6, 11, 23, 58, 705, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 6, 15, 23, 58, 705, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 60,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 2, 13, 20, 28, 14, 218, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 13, 22, 28, 14, 218, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 61,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 4, 22, 19, 40, 6, 480, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 22, 23, 40, 6, 480, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 62,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 3, 21, 1, 52, 50, 108, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 21, 7, 52, 50, 108, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 63,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 1, 15, 5, 12, 3, 189, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 15, 11, 12, 3, 189, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 64,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 3, 22, 14, 38, 0, 452, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 22, 20, 38, 0, 452, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 65,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 22, 1, 59, 58, 603, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 22, 4, 59, 58, 603, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 66,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 4, 13, 14, 43, 30, 686, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 13, 19, 43, 30, 686, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 67,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 4, 21, 15, 36, 5, 511, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 21, 23, 36, 5, 511, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 68,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 3, 29, 15, 36, 15, 290, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 30, 1, 36, 15, 290, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 69,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 1, 5, 11, 36, 47, 806, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 5, 18, 36, 47, 806, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 70,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 3, 29, 4, 54, 36, 596, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 29, 13, 54, 36, 596, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 71,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 4, 14, 14, 34, 41, 235, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 14, 22, 34, 41, 235, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 72,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 1, 12, 4, 18, 5, 583, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 12, 14, 18, 5, 583, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 73,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 6, 21, 51, 7, 485, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 7, 5, 51, 7, 485, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 74,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 3, 25, 7, 2, 51, 426, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 25, 16, 2, 51, 426, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 75,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 2, 16, 11, 14, 41, 58, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 16, 16, 14, 41, 58, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 76,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 4, 9, 20, 35, 5, 685, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 10, 2, 35, 5, 685, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 77,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 4, 29, 7, 6, 13, 956, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 29, 12, 6, 13, 956, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 78,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 1, 12, 44, 52, 258, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 1, 18, 44, 52, 258, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 79,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 4, 30, 11, 50, 23, 705, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 30, 15, 50, 23, 705, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 80,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 4, 28, 16, 37, 42, 363, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 28, 21, 37, 42, 363, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 81,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 1, 6, 7, 31, 48, 283, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 6, 12, 31, 48, 283, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 82,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 3, 8, 9, 35, 29, 558, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 8, 15, 35, 29, 558, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 83,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 1, 4, 13, 36, 51, 873, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 4, 18, 36, 51, 873, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 84,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 12, 7, 8, 57, 406, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 12, 17, 8, 57, 406, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 85,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 1, 9, 4, 12, 43, 922, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 9, 10, 12, 43, 922, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 86,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 1, 12, 10, 8, 19, 148, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 12, 17, 8, 19, 148, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 87,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 2, 17, 7, 26, 0, 353, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 17, 16, 26, 0, 353, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 88,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 1, 18, 7, 59, 12, 581, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 18, 10, 59, 12, 581, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 89,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 2, 27, 9, 38, 17, 326, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 27, 14, 38, 17, 326, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 90,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 4, 1, 9, 17, 330, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 4, 2, 9, 17, 330, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 91,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 1, 20, 6, 49, 24, 846, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 20, 9, 49, 24, 846, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 92,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 4, 2, 4, 51, 56, 105, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 2, 10, 51, 56, 105, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 93,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 4, 21, 6, 58, 39, 551, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 21, 14, 58, 39, 551, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 94,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 1, 29, 7, 57, 55, 166, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 29, 9, 57, 55, 166, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 95,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 16, 12, 33, 47, 80, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 16, 22, 33, 47, 80, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 96,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 6, 3, 56, 18, 745, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 6, 5, 56, 18, 745, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 97,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 3, 23, 41, 33, 646, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 4, 8, 41, 33, 646, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 98,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 3, 27, 2, 0, 36, 818, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 27, 11, 0, 36, 818, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 99,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 1, 12, 21, 11, 36, 684, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 13, 1, 11, 36, 684, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 100,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 3, 3, 14, 32, 19, 803, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 3, 16, 32, 19, 803, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 101,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 3, 11, 22, 53, 28, 991, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 12, 6, 53, 28, 991, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Map", b =>
                {
                    b.Property<int>("M_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("M_ID"), 1L, 1);

                    b.Property<string>("M_Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("M_MapType")
                        .HasColumnType("int");

                    b.Property<string>("M_Src")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("M_maxX")
                        .HasColumnType("int");

                    b.Property<int>("M_maxY")
                        .HasColumnType("int");

                    b.Property<int>("M_minX")
                        .HasColumnType("int");

                    b.Property<int>("M_minY")
                        .HasColumnType("int");

                    b.HasKey("M_ID");

                    b.ToTable("Maps", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Map_ADArea", b =>
                {
                    b.Property<int>("Area_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Area_ID"), 1L, 1);

                    b.Property<int>("Area_EndX")
                        .HasColumnType("int");

                    b.Property<int>("Area_EndY")
                        .HasColumnType("int");

                    b.Property<int>("Area_StartX")
                        .HasColumnType("int");

                    b.Property<int>("Area_StartY")
                        .HasColumnType("int");

                    b.Property<int>("CaseID")
                        .HasColumnType("int");

                    b.Property<int>("M_ID")
                        .HasColumnType("int");

                    b.HasKey("Area_ID");

                    b.HasIndex("CaseID");

                    b.HasIndex("M_ID");

                    b.ToTable("Map_ADAreas", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Map_BlockSpace", b =>
                {
                    b.Property<int>("Mb_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mb_ID"), 1L, 1);

                    b.Property<int>("M_ID")
                        .HasColumnType("int");

                    b.Property<int>("Mb_EndX")
                        .HasColumnType("int");

                    b.Property<int>("Mb_EndY")
                        .HasColumnType("int");

                    b.Property<int>("Mb_starX")
                        .HasColumnType("int");

                    b.Property<int>("Mb_starY")
                        .HasColumnType("int");

                    b.HasKey("Mb_ID");

                    b.HasIndex("M_ID");

                    b.ToTable("BlockSpaces", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Order", b =>
                {
                    b.Property<int>("O_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("O_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<bool>("O_Cancle")
                        .HasColumnType("bit");

                    b.Property<DateTime>("O_Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("O_TotalPrice")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("O_ID");

                    b.HasIndex("A_ID");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            O_ID = 1,
                            A_ID = 1,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5156),
                            O_TotalPrice = 2396m
                        },
                        new
                        {
                            O_ID = 2,
                            A_ID = 1,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5157),
                            O_TotalPrice = 1198m
                        },
                        new
                        {
                            O_ID = 3,
                            A_ID = 8,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5192),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 4,
                            A_ID = 4,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5218),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 5,
                            A_ID = 9,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5235),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 6,
                            A_ID = 7,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5278),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 7,
                            A_ID = 8,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5294),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 8,
                            A_ID = 5,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5315),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 9,
                            A_ID = 2,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5332),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 10,
                            A_ID = 1,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5350),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 11,
                            A_ID = 8,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5366),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 12,
                            A_ID = 2,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5385),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 13,
                            A_ID = 1,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5402),
                            O_TotalPrice = 699m
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.OrderDetail", b =>
                {
                    b.Property<int>("Od_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Od_ID"), 1L, 1);

                    b.Property<int>("O_ID")
                        .HasColumnType("int");

                    b.Property<int>("Od_Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Od_Sum")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Od_UnitPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("P_ID")
                        .HasColumnType("int");

                    b.HasKey("Od_ID");

                    b.HasIndex("O_ID");

                    b.HasIndex("P_ID");

                    b.ToTable("OrderDetails", (string)null);

                    b.HasData(
                        new
                        {
                            Od_ID = 1,
                            O_ID = 1,
                            Od_Quantity = 2,
                            Od_Sum = 1398m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 2,
                            O_ID = 1,
                            Od_Quantity = 2,
                            Od_Sum = 998m,
                            Od_UnitPrice = 499m,
                            P_ID = 2
                        },
                        new
                        {
                            Od_ID = 3,
                            O_ID = 2,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 4,
                            O_ID = 2,
                            Od_Quantity = 1,
                            Od_Sum = 499m,
                            Od_UnitPrice = 499m,
                            P_ID = 2
                        },
                        new
                        {
                            Od_ID = 5,
                            O_ID = 3,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 6,
                            O_ID = 4,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 7,
                            O_ID = 5,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 8,
                            O_ID = 6,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 9,
                            O_ID = 7,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 10,
                            O_ID = 8,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 11,
                            O_ID = 9,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 12,
                            O_ID = 10,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 13,
                            O_ID = 11,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 14,
                            O_ID = 12,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 15,
                            O_ID = 13,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Partner", b =>
                {
                    b.Property<int>("P_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("P_ID"), 1L, 1);

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P_Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("P_ID");

                    b.ToTable("Partners", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Product", b =>
                {
                    b.Property<int>("P_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("P_ID"), 1L, 1);

                    b.Property<DateTime>("P_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("P_Describe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("P_Discontinuted")
                        .HasColumnType("bit");

                    b.Property<int>("P_Discount")
                        .HasColumnType("int");

                    b.Property<string>("P_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("P_Instock")
                        .HasColumnType("int");

                    b.Property<string>("P_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("P_Price")
                        .HasColumnType("int");

                    b.Property<int>("P_ProductType")
                        .HasColumnType("int");

                    b.HasKey("P_ID");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            P_ID = 1,
                            P_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5141),
                            P_Describe = "Regular Fit反摺袖襯衫",
                            P_Discontinuted = false,
                            P_Discount = 0,
                            P_Image = "1.jpg",
                            P_Instock = 99,
                            P_Name = "反摺袖襯衫",
                            P_Price = 699,
                            P_ProductType = 1
                        },
                        new
                        {
                            P_ID = 2,
                            P_Date = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5143),
                            P_Describe = "Regular Fit棉麻短袖襯衫",
                            P_Discontinuted = false,
                            P_Discount = 0,
                            P_Image = "2.jpg",
                            P_Instock = 99,
                            P_Name = "短袖襯衫",
                            P_Price = 499,
                            P_ProductType = 0
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Report", b =>
                {
                    b.Property<int>("R_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("R_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<string>("R_Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("R_Reply")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("R_ReportStatus")
                        .HasColumnType("int");

                    b.Property<int>("R_ReportType")
                        .HasColumnType("int");

                    b.Property<DateTime>("R_Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReportedA_ID")
                        .HasColumnType("int");

                    b.HasKey("R_ID");

                    b.HasIndex("A_ID");

                    b.HasIndex("ReportedA_ID");

                    b.ToTable("Reports", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Society", b =>
                {
                    b.Property<int>("S_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("S_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("S_Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TargetA_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("S_ID");

                    b.HasIndex("A_ID");

                    b.HasIndex("TargetA_ID");

                    b.ToTable("Societies", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.UserAccount", b =>
                {
                    b.Property<int>("A_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("A_ID"), 1L, 1);

                    b.Property<int>("A_Coin")
                        .HasColumnType("int");

                    b.Property<string>("A_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("A_Gender")
                        .HasColumnType("int");

                    b.Property<string>("A_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("A_NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("A_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("A_RegisteredAt")
                        .HasColumnType("Date");

                    b.Property<string>("A_add")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("A_level")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("Date");

                    b.Property<int>("P_id")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPWD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("A_ID");

                    b.HasIndex("P_id");

                    b.ToTable("Accounts", (string)null);

                    b.HasData(
                        new
                        {
                            A_ID = 1,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(4987),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(4982),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 2,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5004),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5003),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 3,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5013),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5013),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 4,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5023),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5022),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 5,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5032),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5031),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 6,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5044),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5043),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 7,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5053),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5052),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 8,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5062),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5062),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 9,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5072),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5071),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 10,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5082),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 20, 22, 51, 47, 414, DateTimeKind.Local).AddTicks(5082),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Ads", b =>
                {
                    b.HasOne("final_repo_test.Models.CaseTable", "CaseTable")
                        .WithMany("Ads")
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Ads_OrderStatus", "Ads_OrderStatus")
                        .WithMany("Ads")
                        .HasForeignKey("OS_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Partner", "Partner")
                        .WithMany("Ads")
                        .HasForeignKey("PartnerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ads_OrderStatus");

                    b.Navigation("CaseTable");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("final_repo_test.Models.CardOrder", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("CardOrders")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Card", "Card")
                        .WithMany("CardOrders")
                        .HasForeignKey("CA_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.CardType", "CardType")
                        .WithMany("CardOrders")
                        .HasForeignKey("CT_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Card");

                    b.Navigation("CardType");
                });

            modelBuilder.Entity("final_repo_test.Models.DebugLog", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("DebugLogs")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("final_repo_test.Models.LoginStaus", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("LoginStaus")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("final_repo_test.Models.Map_ADArea", b =>
                {
                    b.HasOne("final_repo_test.Models.CaseTable", "CaseTable")
                        .WithMany("Map_ADAreas")
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Map", "Map")
                        .WithMany("Map_ADAreas")
                        .HasForeignKey("M_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaseTable");

                    b.Navigation("Map");
                });

            modelBuilder.Entity("final_repo_test.Models.Map_BlockSpace", b =>
                {
                    b.HasOne("final_repo_test.Models.Map", "Map")
                        .WithMany("Map_BlockSpaces")
                        .HasForeignKey("M_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Map");
                });

            modelBuilder.Entity("final_repo_test.Models.Order", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("Orders")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("final_repo_test.Models.OrderDetail", b =>
                {
                    b.HasOne("final_repo_test.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("O_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("P_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("final_repo_test.Models.Report", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("Reports")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.UserAccount", "ReportedAccount")
                        .WithMany("ReportedReports")
                        .HasForeignKey("ReportedA_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("ReportedAccount");
                });

            modelBuilder.Entity("final_repo_test.Models.Society", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("Societies")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.UserAccount", "TargetAccount")
                        .WithMany("TargetSocieties")
                        .HasForeignKey("TargetA_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("TargetAccount");
                });

            modelBuilder.Entity("final_repo_test.Models.UserAccount", b =>
                {
                    b.HasOne("final_repo_test.Models.Product", "Product")
                        .WithMany("Accounts")
                        .HasForeignKey("P_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("final_repo_test.Models.Ads_OrderStatus", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("final_repo_test.Models.Card", b =>
                {
                    b.Navigation("CardOrders");
                });

            modelBuilder.Entity("final_repo_test.Models.CardType", b =>
                {
                    b.Navigation("CardOrders");
                });

            modelBuilder.Entity("final_repo_test.Models.CaseTable", b =>
                {
                    b.Navigation("Ads");

                    b.Navigation("Map_ADAreas");
                });

            modelBuilder.Entity("final_repo_test.Models.Map", b =>
                {
                    b.Navigation("Map_ADAreas");

                    b.Navigation("Map_BlockSpaces");
                });

            modelBuilder.Entity("final_repo_test.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("final_repo_test.Models.Partner", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("final_repo_test.Models.Product", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("final_repo_test.Models.UserAccount", b =>
                {
                    b.Navigation("CardOrders");

                    b.Navigation("DebugLogs");

                    b.Navigation("LoginStaus");

                    b.Navigation("Orders");

                    b.Navigation("ReportedReports");

                    b.Navigation("Reports");

                    b.Navigation("Societies");

                    b.Navigation("TargetSocieties");
                });
#pragma warning restore 612, 618
        }
    }
}
