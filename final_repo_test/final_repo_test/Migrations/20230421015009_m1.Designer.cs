// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using final_repo_test.Data;

#nullable disable

namespace final_repo_test.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230421015009_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("final_repo_test.Models.Ads", b =>
                {
                    b.Property<int>("Ad_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ad_ID"), 1L, 1);

                    b.Property<int>("AD_FinalPaymentAmount")
                        .HasColumnType("int");

                    b.Property<int>("Ad_ActiveStatus")
                        .HasColumnType("int");

                    b.Property<int>("Ad_Clicks")
                        .HasColumnType("int");

                    b.Property<int>("Ad_DayCount")
                        .HasColumnType("int");

                    b.Property<string>("Ad_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ad_EndTime")
                        .HasColumnType("Date");

                    b.Property<string>("Ad_ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ad_PaymentDueDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("Ad_StartTime")
                        .HasColumnType("Date");

                    b.Property<string>("Ad_TargetURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ad_TimeOfPayment")
                        .HasColumnType("Date");

                    b.Property<int>("CaseID")
                        .HasColumnType("int");

                    b.Property<int>("OS_ID")
                        .HasColumnType("int");

                    b.Property<int>("PartnerID")
                        .HasColumnType("int");

                    b.HasKey("Ad_ID");

                    b.HasIndex("CaseID");

                    b.HasIndex("OS_ID");

                    b.HasIndex("PartnerID");

                    b.ToTable("Ads", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Ads_OrderStatus", b =>
                {
                    b.Property<int>("OS_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OS_ID"), 1L, 1);

                    b.Property<decimal>("OS_FullfillmentRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OS_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OS_PaymentMultiplier")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OS_ID");

                    b.ToTable("Ads_OrderStatuses");
                });

            modelBuilder.Entity("final_repo_test.Models.Card", b =>
                {
                    b.Property<int>("CA_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CA_ID"), 1L, 1);

                    b.Property<DateTime>("CA_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("CA_Describe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CA_Discontinuted")
                        .HasColumnType("bit");

                    b.Property<string>("CA_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CA_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CA_Price")
                        .HasColumnType("int");

                    b.HasKey("CA_ID");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            CA_ID = 1,
                            CA_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1817),
                            CA_Describe = "100元換200點",
                            CA_Discontinuted = false,
                            CA_Image = "點數.png",
                            CA_Name = "100元換200點",
                            CA_Price = 100
                        },
                        new
                        {
                            CA_ID = 2,
                            CA_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1818),
                            CA_Describe = "200元換350點",
                            CA_Discontinuted = false,
                            CA_Image = "點數.png",
                            CA_Name = "200元換350點",
                            CA_Price = 200
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.CardOrder", b =>
                {
                    b.Property<int>("CO_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CO_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<int>("CA_ID")
                        .HasColumnType("int");

                    b.Property<int>("CO_Quantity")
                        .HasColumnType("int");

                    b.Property<int>("CO_Sum")
                        .HasColumnType("int");

                    b.Property<int>("CT_ID")
                        .HasColumnType("int");

                    b.HasKey("CO_ID");

                    b.HasIndex("A_ID");

                    b.HasIndex("CA_ID");

                    b.HasIndex("CT_ID");

                    b.ToTable("CardOrders");

                    b.HasData(
                        new
                        {
                            CO_ID = 1,
                            A_ID = 1,
                            CA_ID = 1,
                            CO_Quantity = 1,
                            CO_Sum = 100,
                            CT_ID = 1
                        },
                        new
                        {
                            CO_ID = 2,
                            A_ID = 1,
                            CA_ID = 2,
                            CO_Quantity = 2,
                            CO_Sum = 400,
                            CT_ID = 2
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.CardType", b =>
                {
                    b.Property<int>("CT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CT_ID"), 1L, 1);

                    b.Property<string>("CT_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CT_ID");

                    b.ToTable("CardTypes");

                    b.HasData(
                        new
                        {
                            CT_ID = 1,
                            CT_Name = "綠界"
                        },
                        new
                        {
                            CT_ID = 2,
                            CT_Name = "LinePay"
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.CaseTable", b =>
                {
                    b.Property<int>("Case_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Case_ID"), 1L, 1);

                    b.Property<string>("Case_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Case_PricePerDay")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Case_ID");

                    b.ToTable("CaseTables", (string)null);

                    b.HasData(
                        new
                        {
                            Case_ID = 1,
                            Case_Name = "豪華蛋黃熱區",
                            Case_PricePerDay = 250m
                        },
                        new
                        {
                            Case_ID = 2,
                            Case_Name = "中等曝光區",
                            Case_PricePerDay = 200m
                        },
                        new
                        {
                            Case_ID = 3,
                            Case_Name = "經濟實惠區",
                            Case_PricePerDay = 150m
                        },
                        new
                        {
                            Case_ID = 4,
                            Case_Name = "限時特惠專區",
                            Case_PricePerDay = 100m
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.DebugLog", b =>
                {
                    b.Property<int>("D_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("D_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<string>("D_Comment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("D_event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("D_isSolved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("D_time")
                        .HasColumnType("datetime2");

                    b.HasKey("D_ID");

                    b.HasIndex("A_ID");

                    b.ToTable("DebugLogs", (string)null);

                    b.HasData(
                        new
                        {
                            D_ID = 1,
                            A_ID = 1,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1623)
                        },
                        new
                        {
                            D_ID = 2,
                            A_ID = 2,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1663)
                        },
                        new
                        {
                            D_ID = 3,
                            A_ID = 6,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1665)
                        },
                        new
                        {
                            D_ID = 4,
                            A_ID = 2,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1667)
                        },
                        new
                        {
                            D_ID = 5,
                            A_ID = 8,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1668)
                        },
                        new
                        {
                            D_ID = 6,
                            A_ID = 7,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1670)
                        },
                        new
                        {
                            D_ID = 7,
                            A_ID = 4,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1672)
                        },
                        new
                        {
                            D_ID = 8,
                            A_ID = 8,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1673)
                        },
                        new
                        {
                            D_ID = 9,
                            A_ID = 3,
                            D_event = "test",
                            D_isSolved = true,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1674)
                        },
                        new
                        {
                            D_ID = 10,
                            A_ID = 4,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1676)
                        },
                        new
                        {
                            D_ID = 11,
                            A_ID = 3,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1678)
                        },
                        new
                        {
                            D_ID = 12,
                            A_ID = 2,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1679)
                        },
                        new
                        {
                            D_ID = 13,
                            A_ID = 9,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1680)
                        },
                        new
                        {
                            D_ID = 14,
                            A_ID = 2,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1681)
                        },
                        new
                        {
                            D_ID = 15,
                            A_ID = 2,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1682)
                        },
                        new
                        {
                            D_ID = 16,
                            A_ID = 9,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1683)
                        },
                        new
                        {
                            D_ID = 17,
                            A_ID = 9,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1684)
                        },
                        new
                        {
                            D_ID = 18,
                            A_ID = 8,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1704)
                        },
                        new
                        {
                            D_ID = 19,
                            A_ID = 4,
                            D_event = "test",
                            D_isSolved = false,
                            D_time = new DateTime(2023, 4, 21, 9, 50, 9, 297, DateTimeKind.Local).AddTicks(1705)
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Employee", b =>
                {
                    b.Property<int>("E_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("E_ID"), 1L, 1);

                    b.Property<string>("E_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("E_Birthday")
                        .HasColumnType("Date");

                    b.Property<string>("E_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("E_Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("E_HireDate")
                        .HasColumnType("Date");

                    b.Property<string>("E_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("E_Permission")
                        .HasColumnType("int");

                    b.Property<string>("E_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Pwd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("E_Title")
                        .HasColumnType("int");

                    b.Property<string>("E_UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("E_Work")
                        .HasColumnType("bit");

                    b.HasKey("E_ID");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.LoginStaus", b =>
                {
                    b.Property<int>("L_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("L_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("L_cTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L_dcTime")
                        .HasColumnType("datetime2");

                    b.HasKey("L_ID");

                    b.HasIndex("A_ID");

                    b.ToTable("LoginStaus", (string)null);

                    b.HasData(
                        new
                        {
                            L_ID = 1,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 2, 16, 17, 40, 10, 851, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 17, 3, 40, 10, 851, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 2,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 2, 13, 19, 48, 42, 750, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 14, 4, 48, 42, 750, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 3,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 3, 4, 30, 2, 190, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 3, 5, 30, 2, 190, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 4,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 1, 24, 6, 2, 51, 397, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 24, 11, 2, 51, 397, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 5,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 4, 19, 17, 49, 3, 171, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 20, 1, 49, 3, 171, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 6,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 1, 6, 18, 47, 33, 689, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 6, 20, 47, 33, 689, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 7,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 3, 25, 11, 33, 40, 159, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 25, 14, 33, 40, 159, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 8,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 2, 11, 13, 24, 35, 230, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 11, 16, 24, 35, 230, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 9,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 2, 11, 0, 0, 8, 308, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 11, 9, 0, 8, 308, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 10,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 2, 13, 4, 35, 53, 697, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 13, 11, 35, 53, 697, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 11,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 4, 8, 22, 35, 8, 806, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 8, 23, 35, 8, 806, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 12,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 4, 23, 14, 32, 19, 299, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 23, 22, 32, 19, 299, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 13,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 19, 15, 11, 46, 834, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 19, 18, 11, 46, 834, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 14,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 1, 23, 11, 52, 7, 991, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 23, 18, 52, 7, 991, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 15,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 2, 24, 5, 13, 4, 69, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 24, 15, 13, 4, 69, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 16,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 1, 27, 2, 53, 5, 182, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 27, 4, 53, 5, 182, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 17,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 1, 19, 11, 5, 14, 845, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 19, 20, 5, 14, 845, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 18,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 4, 29, 15, 36, 59, 649, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 29, 18, 36, 59, 649, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 19,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 3, 27, 12, 35, 15, 820, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 27, 14, 35, 15, 820, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 20,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 3, 5, 14, 16, 58, 936, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 5, 20, 16, 58, 936, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 21,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 3, 6, 14, 22, 13, 182, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 6, 15, 22, 13, 182, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 22,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 2, 18, 20, 28, 36, 884, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 19, 0, 28, 36, 884, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 23,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 2, 13, 8, 39, 20, 143, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 13, 12, 39, 20, 143, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 24,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 19, 23, 41, 36, 462, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 20, 7, 41, 36, 462, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 25,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 2, 6, 15, 21, 52, 226, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 6, 19, 21, 52, 226, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 26,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 3, 7, 13, 43, 58, 668, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 7, 19, 43, 58, 668, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 27,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 3, 28, 20, 27, 58, 914, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 29, 6, 27, 58, 914, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 28,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 4, 23, 0, 24, 53, 841, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 23, 1, 24, 53, 841, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 29,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 3, 4, 13, 7, 49, 23, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 4, 22, 7, 49, 23, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 30,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 1, 15, 19, 5, 67, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 2, 0, 19, 5, 67, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 31,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 1, 26, 5, 43, 54, 925, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 26, 14, 43, 54, 925, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 32,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 2, 5, 7, 42, 52, 937, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 5, 17, 42, 52, 937, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 33,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 3, 19, 1, 49, 47, 133, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 19, 4, 49, 47, 133, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 34,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 3, 22, 15, 56, 1, 33, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 22, 22, 56, 1, 33, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 35,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 4, 30, 4, 37, 17, 980, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 30, 6, 37, 17, 980, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 36,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 15, 3, 43, 45, 177, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 15, 12, 43, 45, 177, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 37,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 4, 12, 0, 5, 54, 652, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 12, 1, 5, 54, 652, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 38,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 4, 16, 3, 17, 45, 227, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 16, 10, 17, 45, 227, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 39,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 1, 28, 7, 4, 21, 600, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 28, 8, 4, 21, 600, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 40,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 4, 1, 22, 28, 18, 186, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 2, 0, 28, 18, 186, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 41,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 1, 25, 1, 32, 38, 195, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 25, 7, 32, 38, 195, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 42,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 3, 15, 17, 54, 59, 69, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 15, 21, 54, 59, 69, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 43,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 4, 24, 0, 26, 38, 855, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 24, 3, 26, 38, 855, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 44,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 1, 14, 4, 56, 31, 643, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 14, 10, 56, 31, 643, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 45,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 4, 22, 6, 6, 15, 807, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 22, 16, 6, 15, 807, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 46,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 1, 28, 0, 51, 14, 930, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 28, 9, 51, 14, 930, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 47,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 2, 21, 3, 12, 39, 438, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 21, 9, 12, 39, 438, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 48,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 2, 17, 23, 4, 57, 429, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 18, 3, 4, 57, 429, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 49,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 3, 27, 12, 12, 30, 732, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 27, 21, 12, 30, 732, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 50,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 1, 13, 4, 16, 42, 709, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 13, 11, 16, 42, 709, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 51,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 4, 20, 0, 49, 59, 673, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 20, 5, 49, 59, 673, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 52,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 3, 31, 21, 35, 41, 874, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 1, 3, 35, 41, 874, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 53,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 4, 2, 5, 24, 55, 840, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 2, 6, 24, 55, 840, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 54,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 6, 21, 15, 46, 263, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 7, 1, 15, 46, 263, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 55,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 3, 27, 20, 50, 31, 29, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 28, 3, 50, 31, 29, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 56,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 2, 14, 16, 18, 1, 155, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 14, 21, 18, 1, 155, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 57,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 3, 12, 17, 11, 42, 941, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 13, 1, 11, 42, 941, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 58,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 2, 10, 4, 39, 59, 310, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 10, 11, 39, 59, 310, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 59,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 1, 31, 12, 12, 58, 231, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 31, 20, 12, 58, 231, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 60,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 2, 18, 3, 44, 30, 299, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 18, 4, 44, 30, 299, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 61,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 4, 14, 3, 54, 21, 795, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 14, 4, 54, 21, 795, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 62,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 3, 24, 11, 23, 8, 428, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 24, 18, 23, 8, 428, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 63,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 13, 9, 29, 12, 998, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 13, 19, 29, 12, 998, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 64,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 1, 21, 20, 53, 2, 974, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 21, 22, 53, 2, 974, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 65,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 3, 6, 14, 43, 27, 944, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 6, 18, 43, 27, 944, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 66,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 1, 4, 11, 43, 16, 851, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 4, 16, 43, 16, 851, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 67,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 3, 16, 5, 9, 33, 368, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 16, 12, 9, 33, 368, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 68,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 3, 25, 17, 30, 5, 978, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 26, 3, 30, 5, 978, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 69,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 4, 13, 22, 27, 36, 902, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 14, 1, 27, 36, 902, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 70,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 3, 13, 9, 59, 5, 574, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 13, 16, 59, 5, 574, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 71,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 11, 14, 14, 1, 858, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 11, 18, 14, 1, 858, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 72,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 19, 0, 30, 26, 303, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 19, 9, 30, 26, 303, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 73,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 3, 5, 21, 19, 7, 310, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 5, 22, 19, 7, 310, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 74,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 4, 16, 16, 8, 9, 386, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 16, 20, 8, 9, 386, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 75,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 4, 20, 9, 3, 53, 232, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 20, 18, 3, 53, 232, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 76,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 4, 3, 23, 5, 36, 198, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 4, 6, 5, 36, 198, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 77,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 4, 18, 5, 18, 45, 918, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 18, 11, 18, 45, 918, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 78,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 4, 4, 10, 38, 12, 88, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 4, 16, 38, 12, 88, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 79,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 3, 20, 6, 38, 57, 313, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 20, 13, 38, 57, 313, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 80,
                            A_ID = 8,
                            L_cTime = new DateTime(2023, 1, 28, 21, 29, 36, 505, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 29, 2, 29, 36, 505, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 81,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 2, 15, 21, 29, 24, 297, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 16, 3, 29, 24, 297, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 82,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 1, 8, 21, 52, 23, 72, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 9, 6, 52, 23, 72, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 83,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 2, 5, 14, 54, 38, 153, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 5, 19, 54, 38, 153, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 84,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 4, 11, 11, 56, 48, 712, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 11, 14, 56, 48, 712, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 85,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 2, 5, 5, 57, 16, 431, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 5, 10, 57, 16, 431, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 86,
                            A_ID = 5,
                            L_cTime = new DateTime(2023, 1, 12, 11, 49, 32, 724, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 12, 17, 49, 32, 724, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 87,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 1, 15, 21, 44, 34, 978, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 16, 2, 44, 34, 978, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 88,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 1, 8, 10, 9, 33, 99, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 8, 16, 9, 33, 99, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 89,
                            A_ID = 7,
                            L_cTime = new DateTime(2023, 4, 10, 21, 11, 18, 181, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 11, 5, 11, 18, 181, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 90,
                            A_ID = 4,
                            L_cTime = new DateTime(2023, 1, 4, 19, 46, 27, 260, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 4, 21, 46, 27, 260, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 91,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 1, 20, 13, 15, 21, 871, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 20, 18, 15, 21, 871, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 92,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 4, 29, 19, 24, 45, 936, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 30, 3, 24, 45, 936, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 93,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 2, 28, 4, 42, 57, 794, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 28, 9, 42, 57, 794, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 94,
                            A_ID = 3,
                            L_cTime = new DateTime(2023, 2, 13, 19, 10, 47, 408, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 14, 5, 10, 47, 408, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 95,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 1, 17, 23, 0, 55, 900, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 18, 8, 0, 55, 900, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 96,
                            A_ID = 1,
                            L_cTime = new DateTime(2023, 2, 23, 8, 53, 46, 739, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 23, 17, 53, 46, 739, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 97,
                            A_ID = 6,
                            L_cTime = new DateTime(2023, 3, 13, 15, 47, 20, 939, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 3, 14, 1, 47, 20, 939, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 98,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 2, 22, 4, 23, 7, 811, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 22, 13, 23, 7, 811, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 99,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 1, 15, 0, 16, 43, 121, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 1, 15, 7, 16, 43, 121, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 100,
                            A_ID = 2,
                            L_cTime = new DateTime(2023, 4, 15, 15, 3, 7, 897, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 4, 15, 22, 3, 7, 897, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            L_ID = 101,
                            A_ID = 9,
                            L_cTime = new DateTime(2023, 2, 11, 4, 2, 24, 30, DateTimeKind.Unspecified),
                            L_dcTime = new DateTime(2023, 2, 11, 10, 2, 24, 30, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Map", b =>
                {
                    b.Property<int>("M_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("M_ID"), 1L, 1);

                    b.Property<string>("M_Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("M_MapType")
                        .HasColumnType("int");

                    b.Property<string>("M_Src")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("M_maxX")
                        .HasColumnType("int");

                    b.Property<int>("M_maxY")
                        .HasColumnType("int");

                    b.Property<int>("M_minX")
                        .HasColumnType("int");

                    b.Property<int>("M_minY")
                        .HasColumnType("int");

                    b.HasKey("M_ID");

                    b.ToTable("Maps", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Map_ADArea", b =>
                {
                    b.Property<int>("Area_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Area_ID"), 1L, 1);

                    b.Property<int>("Area_EndX")
                        .HasColumnType("int");

                    b.Property<int>("Area_EndY")
                        .HasColumnType("int");

                    b.Property<int>("Area_StartX")
                        .HasColumnType("int");

                    b.Property<int>("Area_StartY")
                        .HasColumnType("int");

                    b.Property<int>("CaseID")
                        .HasColumnType("int");

                    b.Property<int>("M_ID")
                        .HasColumnType("int");

                    b.HasKey("Area_ID");

                    b.HasIndex("CaseID");

                    b.HasIndex("M_ID");

                    b.ToTable("Map_ADAreas", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Map_BlockSpace", b =>
                {
                    b.Property<int>("Mb_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mb_ID"), 1L, 1);

                    b.Property<int>("M_ID")
                        .HasColumnType("int");

                    b.Property<int>("Mb_EndX")
                        .HasColumnType("int");

                    b.Property<int>("Mb_EndY")
                        .HasColumnType("int");

                    b.Property<int>("Mb_starX")
                        .HasColumnType("int");

                    b.Property<int>("Mb_starY")
                        .HasColumnType("int");

                    b.HasKey("Mb_ID");

                    b.HasIndex("M_ID");

                    b.ToTable("BlockSpaces", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Order", b =>
                {
                    b.Property<int>("O_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("O_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<bool>("O_Cancle")
                        .HasColumnType("bit");

                    b.Property<DateTime>("O_Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("O_TotalPrice")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("O_ID");

                    b.HasIndex("A_ID");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            O_ID = 1,
                            A_ID = 1,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1838),
                            O_TotalPrice = 2396m
                        },
                        new
                        {
                            O_ID = 2,
                            A_ID = 1,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1838),
                            O_TotalPrice = 1198m
                        },
                        new
                        {
                            O_ID = 3,
                            A_ID = 4,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1910),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 4,
                            A_ID = 6,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1922),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 5,
                            A_ID = 6,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1941),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 6,
                            A_ID = 2,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1951),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 7,
                            A_ID = 8,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1960),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 8,
                            A_ID = 7,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1968),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 9,
                            A_ID = 9,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1983),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 10,
                            A_ID = 6,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1992),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 11,
                            A_ID = 8,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(2000),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 12,
                            A_ID = 7,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(2009),
                            O_TotalPrice = 699m
                        },
                        new
                        {
                            O_ID = 13,
                            A_ID = 3,
                            O_Cancle = false,
                            O_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(2024),
                            O_TotalPrice = 699m
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.OrderDetail", b =>
                {
                    b.Property<int>("Od_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Od_ID"), 1L, 1);

                    b.Property<int>("O_ID")
                        .HasColumnType("int");

                    b.Property<int>("Od_Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Od_Sum")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Od_UnitPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("P_ID")
                        .HasColumnType("int");

                    b.HasKey("Od_ID");

                    b.HasIndex("O_ID");

                    b.HasIndex("P_ID");

                    b.ToTable("OrderDetails", (string)null);

                    b.HasData(
                        new
                        {
                            Od_ID = 1,
                            O_ID = 1,
                            Od_Quantity = 2,
                            Od_Sum = 1398m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 2,
                            O_ID = 1,
                            Od_Quantity = 2,
                            Od_Sum = 998m,
                            Od_UnitPrice = 499m,
                            P_ID = 2
                        },
                        new
                        {
                            Od_ID = 3,
                            O_ID = 2,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 4,
                            O_ID = 2,
                            Od_Quantity = 1,
                            Od_Sum = 499m,
                            Od_UnitPrice = 499m,
                            P_ID = 2
                        },
                        new
                        {
                            Od_ID = 5,
                            O_ID = 3,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 6,
                            O_ID = 4,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 7,
                            O_ID = 5,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 8,
                            O_ID = 6,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 9,
                            O_ID = 7,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 10,
                            O_ID = 8,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 11,
                            O_ID = 9,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 12,
                            O_ID = 10,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 13,
                            O_ID = 11,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 14,
                            O_ID = 12,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        },
                        new
                        {
                            Od_ID = 15,
                            O_ID = 13,
                            Od_Quantity = 1,
                            Od_Sum = 699m,
                            Od_UnitPrice = 699m,
                            P_ID = 1
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Partner", b =>
                {
                    b.Property<int>("P_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("P_ID"), 1L, 1);

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P_Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("P_ID");

                    b.ToTable("Partners", (string)null);

                    b.HasData(
                        new
                        {
                            P_ID = 1,
                            Contact = "林小明",
                            Email = "apple@gmail.com",
                            P_Name = "Apple",
                            P_Note = "好合作",
                            Phone = "0912345678"
                        },
                        new
                        {
                            P_ID = 2,
                            Contact = "陳大名",
                            Email = "google@gmail.com",
                            P_Name = "Google",
                            P_Note = "溝通良好",
                            Phone = "0923456789"
                        },
                        new
                        {
                            P_ID = 3,
                            Contact = "王小美",
                            Email = "amazon@gmail.com",
                            P_Name = "Amazon",
                            P_Note = "產品品質不錯",
                            Phone = "0934567890"
                        },
                        new
                        {
                            P_ID = 4,
                            Contact = "李志明",
                            Email = "microsoft@gmail.com",
                            P_Name = "Microsoft",
                            P_Note = "合作愉快",
                            Phone = "0912345678"
                        },
                        new
                        {
                            P_ID = 5,
                            Contact = "蔡佳玲",
                            Email = "facebook@gmail.com",
                            P_Name = "Facebook",
                            P_Note = "回覆速度快",
                            Phone = "0923456789"
                        },
                        new
                        {
                            P_ID = 6,
                            Contact = "林小華",
                            Email = "netflix@gmail.com",
                            P_Name = "Netflix",
                            P_Note = "服務很好",
                            Phone = "0934567890"
                        },
                        new
                        {
                            P_ID = 7,
                            Contact = "陳小明",
                            Email = "tesla@gmail.com",
                            P_Name = "Tesla",
                            P_Note = "值得信賴",
                            Phone = "0912345678"
                        },
                        new
                        {
                            P_ID = 8,
                            Contact = "蔡小玲",
                            Email = "twitter@gmail.com",
                            P_Name = "Twitter",
                            P_Note = "溝通良好",
                            Phone = "0923456789"
                        },
                        new
                        {
                            P_ID = 9,
                            Contact = "李小明",
                            Email = "uber@gmail.com",
                            P_Name = "Uber",
                            P_Note = "好合作",
                            Phone = "0934567890"
                        },
                        new
                        {
                            P_ID = 10,
                            Contact = "林小美",
                            Email = "airbnb@gmail.com",
                            P_Name = "Airbnb",
                            P_Note = "服務很好",
                            Phone = "0912345678"
                        },
                        new
                        {
                            P_ID = 11,
                            Contact = "陳大名",
                            Email = "linkedin@gmail.com",
                            P_Name = "LinkedIn",
                            P_Note = "回覆速度快",
                            Phone = "0923456789"
                        },
                        new
                        {
                            P_ID = 12,
                            Contact = "王小華",
                            Email = "dropbox@gmail.com",
                            P_Name = "Dropbox",
                            P_Note = "值得信賴",
                            Phone = "0934567890"
                        },
                        new
                        {
                            P_ID = 13,
                            Contact = "蔡小玲",
                            Email = "twitter@gmail.com",
                            P_Name = "Twitter",
                            P_Note = "溝通良好",
                            Phone = "0923456789"
                        },
                        new
                        {
                            P_ID = 14,
                            Contact = "陳小明",
                            Email = "salesforce@gmail.com",
                            P_Name = "Salesforce",
                            P_Note = "產品品質不錯",
                            Phone = "0912345678"
                        },
                        new
                        {
                            P_ID = 15,
                            Contact = "蔡佳玲",
                            Email = "adobe@gmail.com",
                            P_Name = "Adobe",
                            P_Note = "回覆速度快",
                            Phone = "0923456789"
                        },
                        new
                        {
                            P_ID = 16,
                            Contact = "林小華",
                            Email = "paypal@gmail.com",
                            P_Name = "PayPal",
                            P_Note = "合作愉快",
                            Phone = "0934567890"
                        },
                        new
                        {
                            P_ID = 17,
                            Contact = "陳小明",
                            Email = "oracle@gmail.com",
                            P_Name = "Oracle",
                            P_Note = "回覆速度快",
                            Phone = "0912345678"
                        },
                        new
                        {
                            P_ID = 18,
                            Contact = "蔡小玲",
                            Email = "ibm@gmail.com",
                            P_Name = "IBM",
                            P_Note = "好合作",
                            Phone = "0923456789"
                        },
                        new
                        {
                            P_ID = 19,
                            Contact = "李小明",
                            Email = "intel@gmail.com",
                            P_Name = "Intel",
                            P_Note = "值得信賴",
                            Phone = "0934567890"
                        },
                        new
                        {
                            P_ID = 20,
                            Contact = "林小美",
                            Email = "hp@gmail.com",
                            P_Name = "HP",
                            P_Note = "溝通良好",
                            Phone = "0912345678"
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Product", b =>
                {
                    b.Property<int>("P_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("P_ID"), 1L, 1);

                    b.Property<DateTime>("P_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("P_Describe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("P_Discontinuted")
                        .HasColumnType("bit");

                    b.Property<int>("P_Discount")
                        .HasColumnType("int");

                    b.Property<string>("P_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("P_Instock")
                        .HasColumnType("int");

                    b.Property<string>("P_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("P_Price")
                        .HasColumnType("int");

                    b.Property<int>("P_ProductType")
                        .HasColumnType("int");

                    b.HasKey("P_ID");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            P_ID = 1,
                            P_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1827),
                            P_Describe = "Regular Fit反摺袖襯衫",
                            P_Discontinuted = false,
                            P_Discount = 0,
                            P_Image = "1.jpg",
                            P_Instock = 99,
                            P_Name = "反摺袖襯衫",
                            P_Price = 699,
                            P_ProductType = 1
                        },
                        new
                        {
                            P_ID = 2,
                            P_Date = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1828),
                            P_Describe = "Regular Fit棉麻短袖襯衫",
                            P_Discontinuted = false,
                            P_Discount = 0,
                            P_Image = "2.jpg",
                            P_Instock = 99,
                            P_Name = "短袖襯衫",
                            P_Price = 499,
                            P_ProductType = 0
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Report", b =>
                {
                    b.Property<int>("R_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("R_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<string>("R_Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("R_Reply")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("R_ReportStatus")
                        .HasColumnType("int");

                    b.Property<int>("R_ReportType")
                        .HasColumnType("int");

                    b.Property<DateTime>("R_Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReportedA_ID")
                        .HasColumnType("int");

                    b.HasKey("R_ID");

                    b.HasIndex("A_ID");

                    b.HasIndex("ReportedA_ID");

                    b.ToTable("Reports", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.Society", b =>
                {
                    b.Property<int>("S_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("S_ID"), 1L, 1);

                    b.Property<int>("A_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("S_Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TargetA_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("S_ID");

                    b.HasIndex("A_ID");

                    b.HasIndex("TargetA_ID");

                    b.ToTable("Societies", (string)null);
                });

            modelBuilder.Entity("final_repo_test.Models.UserAccount", b =>
                {
                    b.Property<int>("A_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("A_ID"), 1L, 1);

                    b.Property<int>("A_Coin")
                        .HasColumnType("int");

                    b.Property<string>("A_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("A_Gender")
                        .HasColumnType("int");

                    b.Property<string>("A_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("A_NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("A_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("A_RegisteredAt")
                        .HasColumnType("Date");

                    b.Property<string>("A_add")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("A_level")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("Date");

                    b.Property<int>("P_id")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPWD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("A_ID");

                    b.HasIndex("P_id");

                    b.ToTable("Accounts", (string)null);

                    b.HasData(
                        new
                        {
                            A_ID = 1,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1733),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1729),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 2,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1746),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1745),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 3,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1751),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1751),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 4,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1757),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1757),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 5,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1762),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1762),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 6,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1769),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1768),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 7,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1774),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1773),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 8,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1779),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1779),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 9,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1784),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1784),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        },
                        new
                        {
                            A_ID = 10,
                            A_Coin = 999999,
                            A_Email = "Test@gmail.com",
                            A_Gender = 0,
                            A_Name = "Test",
                            A_NickName = "Test",
                            A_Phone = "0900000000",
                            A_RegisteredAt = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1790),
                            A_add = "Test",
                            A_level = 99,
                            Birthday = new DateTime(2023, 4, 21, 9, 50, 9, 298, DateTimeKind.Local).AddTicks(1789),
                            P_id = 1,
                            UserName = "Test",
                            UserPWD = "Test"
                        });
                });

            modelBuilder.Entity("final_repo_test.Models.Ads", b =>
                {
                    b.HasOne("final_repo_test.Models.CaseTable", "CaseTable")
                        .WithMany("Ads")
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Ads_OrderStatus", "Ads_OrderStatus")
                        .WithMany("Ads")
                        .HasForeignKey("OS_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Partner", "Partner")
                        .WithMany("Ads")
                        .HasForeignKey("PartnerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ads_OrderStatus");

                    b.Navigation("CaseTable");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("final_repo_test.Models.CardOrder", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("CardOrders")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Card", "Card")
                        .WithMany("CardOrders")
                        .HasForeignKey("CA_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.CardType", "CardType")
                        .WithMany("CardOrders")
                        .HasForeignKey("CT_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Card");

                    b.Navigation("CardType");
                });

            modelBuilder.Entity("final_repo_test.Models.DebugLog", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("DebugLogs")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("final_repo_test.Models.LoginStaus", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("LoginStaus")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("final_repo_test.Models.Map_ADArea", b =>
                {
                    b.HasOne("final_repo_test.Models.CaseTable", "CaseTable")
                        .WithMany("Map_ADAreas")
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Map", "Map")
                        .WithMany("Map_ADAreas")
                        .HasForeignKey("M_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaseTable");

                    b.Navigation("Map");
                });

            modelBuilder.Entity("final_repo_test.Models.Map_BlockSpace", b =>
                {
                    b.HasOne("final_repo_test.Models.Map", "Map")
                        .WithMany("Map_BlockSpaces")
                        .HasForeignKey("M_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Map");
                });

            modelBuilder.Entity("final_repo_test.Models.Order", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("Orders")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("final_repo_test.Models.OrderDetail", b =>
                {
                    b.HasOne("final_repo_test.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("O_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("P_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("final_repo_test.Models.Report", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("Reports")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.UserAccount", "ReportedAccount")
                        .WithMany("ReportedReports")
                        .HasForeignKey("ReportedA_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("ReportedAccount");
                });

            modelBuilder.Entity("final_repo_test.Models.Society", b =>
                {
                    b.HasOne("final_repo_test.Models.UserAccount", "Account")
                        .WithMany("Societies")
                        .HasForeignKey("A_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("final_repo_test.Models.UserAccount", "TargetAccount")
                        .WithMany("TargetSocieties")
                        .HasForeignKey("TargetA_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("TargetAccount");
                });

            modelBuilder.Entity("final_repo_test.Models.UserAccount", b =>
                {
                    b.HasOne("final_repo_test.Models.Product", "Product")
                        .WithMany("Accounts")
                        .HasForeignKey("P_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("final_repo_test.Models.Ads_OrderStatus", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("final_repo_test.Models.Card", b =>
                {
                    b.Navigation("CardOrders");
                });

            modelBuilder.Entity("final_repo_test.Models.CardType", b =>
                {
                    b.Navigation("CardOrders");
                });

            modelBuilder.Entity("final_repo_test.Models.CaseTable", b =>
                {
                    b.Navigation("Ads");

                    b.Navigation("Map_ADAreas");
                });

            modelBuilder.Entity("final_repo_test.Models.Map", b =>
                {
                    b.Navigation("Map_ADAreas");

                    b.Navigation("Map_BlockSpaces");
                });

            modelBuilder.Entity("final_repo_test.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("final_repo_test.Models.Partner", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("final_repo_test.Models.Product", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("final_repo_test.Models.UserAccount", b =>
                {
                    b.Navigation("CardOrders");

                    b.Navigation("DebugLogs");

                    b.Navigation("LoginStaus");

                    b.Navigation("Orders");

                    b.Navigation("ReportedReports");

                    b.Navigation("Reports");

                    b.Navigation("Societies");

                    b.Navigation("TargetSocieties");
                });
#pragma warning restore 612, 618
        }
    }
}
